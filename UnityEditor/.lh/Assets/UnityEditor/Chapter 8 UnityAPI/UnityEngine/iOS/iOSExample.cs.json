{
    "sourceFile": "Assets/UnityEditor/Chapter 8 UnityAPI/UnityEngine/iOS/iOSExample.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1750934707149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1750934707149,
            "name": "Commit-0",
            "content": "using UnityEngine;\r\n\r\n/// <summary>\r\n/// UnityEngine.iOS 命名空间案例演示\r\n/// 展示iOS平台特定功能、设备特性检测、iOS API调用等核心功能\r\n/// </summary>\r\npublic class iOSExample : MonoBehaviour\r\n{\r\n    [Header(\"iOS设备信息\")]\r\n    [SerializeField] private string deviceModel = \"\"; //设备型号\r\n    [SerializeField] private string deviceName = \"\"; //设备名称\r\n    [SerializeField] private string systemVersion = \"\"; //系统版本\r\n    [SerializeField] private string deviceIdentifier = \"\"; //设备标识符\r\n    [SerializeField] private bool isIPad = false; //是否为iPad\r\n    [SerializeField] private bool isIPhone = false; //是否为iPhone\r\n    [SerializeField] private bool isIPod = false; //是否为iPod\r\n    \r\n    [Header(\"iOS功能检测\")]\r\n    [SerializeField] private bool supportsGyroscope = false; //支持陀螺仪\r\n    [SerializeField] private bool supportsAccelerometer = false; //支持加速度计\r\n    [SerializeField] private bool supportsLocationService = false; //支持位置服务\r\n    [SerializeField] private bool supportsCamera = false; //支持相机\r\n    [SerializeField] private bool supportsMicrophone = false; //支持麦克风\r\n    [SerializeField] private bool supportsVibration = false; //支持震动\r\n    [SerializeField] private bool supportsMultitouch = false; //支持多点触控\r\n    [SerializeField] private bool supportsMetal = false; //支持Metal\r\n    \r\n    [Header(\"iOS设置\")]\r\n    [SerializeField] private bool enableIdleTimer = true; //启用空闲计时器\r\n    [SerializeField] private bool enableMultitouch = true; //启用多点触控\r\n    [SerializeField] private bool enableGyroscope = true; //启用陀螺仪\r\n    [SerializeField] private bool enableAccelerometer = true; //启用加速度计\r\n    [SerializeField] private bool enableLocationService = false; //启用位置服务\r\n    [SerializeField] private bool enableCamera = false; //启用相机\r\n    [SerializeField] private bool enableMicrophone = false; //启用麦克风\r\n    \r\n    [Header(\"iOS状态\")]\r\n    [SerializeField] private float batteryLevel = 0f; //电池电量\r\n    [SerializeField] private bool isCharging = false; //是否充电\r\n    [SerializeField] private string networkReachability = \"\"; //网络可达性\r\n    [SerializeField] private bool isInternetReachable = false; //网络是否可达\r\n    [SerializeField] private string deviceOrientation = \"\"; //设备方向\r\n    [SerializeField] private string screenOrientation = \"\"; //屏幕方向\r\n    \r\n    [Header(\"iOS功能\")]\r\n    [SerializeField] private bool enableHapticFeedback = true; //启用触觉反馈\r\n    [SerializeField] private bool enableScreenCapture = false; //启用屏幕捕获\r\n    [SerializeField] private bool enableShareSheet = false; //启用分享功能\r\n    [SerializeField] private bool enableLocalNotifications = false; //启用本地通知\r\n    [SerializeField] private bool enablePushNotifications = false; //启用推送通知\r\n    \r\n    [Header(\"iOS调试\")]\r\n    [SerializeField] private bool enableDebugLogging = true; //启用调试日志\r\n    [SerializeField] private bool enablePerformanceMonitoring = true; //启用性能监控\r\n    [SerializeField] private bool enableCrashReporting = false; //启用崩溃报告\r\n    [SerializeField] private bool enableAnalytics = false; //启用分析\r\n    \r\n    private bool isInitialized = false;\r\n    private float lastUpdateTime = 0f;\r\n    private Vector3 lastGyroscopeData = Vector3.zero;\r\n    private Vector3 lastAccelerometerData = Vector3.zero;\r\n\r\n    private void Start()\r\n    {\r\n        InitializeiOSSystem();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 初始化iOS系统\r\n    /// </summary>\r\n    private void InitializeiOSSystem()\r\n    {\r\n        // 检查是否为iOS平台\r\n        if (Application.platform != RuntimePlatform.IPhonePlayer)\r\n        {\r\n            Debug.LogWarning(\"此脚本仅在iOS平台上运行\");\r\n            return;\r\n        }\r\n        \r\n        // 获取iOS设备信息\r\n        GetiOSDeviceInfo();\r\n        \r\n        // 检测iOS功能\r\n        DetectiOSFeatures();\r\n        \r\n        // 初始化iOS设置\r\n        InitializeiOSSettings();\r\n        \r\n        // 启动iOS功能\r\n        StartiOSFeatures();\r\n        \r\n        isInitialized = true;\r\n        Debug.Log(\"iOS系统初始化完成\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取iOS设备信息\r\n    /// </summary>\r\n    private void GetiOSDeviceInfo()\r\n    {\r\n        deviceModel = SystemInfo.deviceModel;\r\n        deviceName = SystemInfo.deviceName;\r\n        systemVersion = SystemInfo.operatingSystem;\r\n        deviceIdentifier = SystemInfo.deviceUniqueIdentifier;\r\n        \r\n        // 检测设备类型\r\n        isIPad = deviceModel.ToLower().Contains(\"ipad\");\r\n        isIPhone = deviceModel.ToLower().Contains(\"iphone\");\r\n        isIPod = deviceModel.ToLower().Contains(\"ipod\");\r\n        \r\n        Debug.Log($\"iOS设备: {deviceModel} ({deviceName})\");\r\n        Debug.Log($\"系统版本: {systemVersion}\");\r\n        Debug.Log($\"设备类型: {(isIPad ? \"iPad\" : isIPhone ? \"iPhone\" : isIPod ? \"iPod\" : \"未知\")}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 检测iOS功能\r\n    /// </summary>\r\n    private void DetectiOSFeatures()\r\n    {\r\n        supportsGyroscope = SystemInfo.supportsGyroscope;\r\n        supportsAccelerometer = SystemInfo.supportsAccelerometer;\r\n        supportsLocationService = Input.location.isEnabledByUser;\r\n        supportsCamera = SystemInfo.supportsCamera;\r\n        supportsMicrophone = SystemInfo.supportsAudio;\r\n        supportsVibration = SystemInfo.supportsVibration;\r\n        supportsMultitouch = Input.multiTouchEnabled;\r\n        supportsMetal = SystemInfo.graphicsDeviceType == UnityEngine.Rendering.GraphicsDeviceType.Metal;\r\n        \r\n        Debug.Log($\"陀螺仪支持: {supportsGyroscope}\");\r\n        Debug.Log($\"加速度计支持: {supportsAccelerometer}\");\r\n        Debug.Log($\"位置服务支持: {supportsLocationService}\");\r\n        Debug.Log($\"相机支持: {supportsCamera}\");\r\n        Debug.Log($\"麦克风支持: {supportsMicrophone}\");\r\n        Debug.Log($\"震动支持: {supportsVibration}\");\r\n        Debug.Log($\"多点触控支持: {supportsMultitouch}\");\r\n        Debug.Log($\"Metal支持: {supportsMetal}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 初始化iOS设置\r\n    /// </summary>\r\n    private void InitializeiOSSettings()\r\n    {\r\n        // 设置空闲计时器\r\n        Screen.sleepTimeout = enableIdleTimer ? SleepTimeout.SystemSetting : SleepTimeout.NeverSleep;\r\n        \r\n        // 设置多点触控\r\n        Input.multiTouchEnabled = enableMultitouch;\r\n        \r\n        // 设置屏幕方向\r\n        Screen.autorotateToPortrait = true;\r\n        Screen.autorotateToPortraitUpsideDown = true;\r\n        Screen.autorotateToLandscapeLeft = true;\r\n        Screen.autorotateToLandscapeRight = true;\r\n        Screen.orientation = ScreenOrientation.AutoRotation;\r\n        \r\n        Debug.Log(\"iOS设置初始化完成\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启动iOS功能\r\n    /// </summary>\r\n    private void StartiOSFeatures()\r\n    {\r\n        // 启动位置服务\r\n        if (enableLocationService && supportsLocationService)\r\n        {\r\n            StartLocationService();\r\n        }\r\n        \r\n        // 启动相机\r\n        if (enableCamera && supportsCamera)\r\n        {\r\n            StartCamera();\r\n        }\r\n        \r\n        // 启动麦克风\r\n        if (enableMicrophone && supportsMicrophone)\r\n        {\r\n            StartMicrophone();\r\n        }\r\n        \r\n        Debug.Log(\"iOS功能启动完成\");\r\n    }\r\n\r\n    private void Update()\r\n    {\r\n        if (!isInitialized) return;\r\n        \r\n        // 更新iOS状态\r\n        UpdateiOSStatus();\r\n        \r\n        // 处理iOS输入\r\n        HandleiOSInput();\r\n        \r\n        // 性能监控\r\n        if (enablePerformanceMonitoring && Time.time - lastUpdateTime > 1f)\r\n        {\r\n            MonitorPerformance();\r\n            lastUpdateTime = Time.time;\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 更新iOS状态\r\n    /// </summary>\r\n    private void UpdateiOSStatus()\r\n    {\r\n        // 获取电池信息\r\n        batteryLevel = SystemInfo.batteryLevel;\r\n        isCharging = SystemInfo.batteryStatus == BatteryStatus.Charging;\r\n        \r\n        // 获取网络状态\r\n        networkReachability = Application.internetReachability.ToString();\r\n        isInternetReachable = Application.internetReachability != NetworkReachability.NotReachable;\r\n        \r\n        // 获取设备方向\r\n        deviceOrientation = Input.deviceOrientation.ToString();\r\n        screenOrientation = Screen.orientation.ToString();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 处理iOS输入\r\n    /// </summary>\r\n    private void HandleiOSInput()\r\n    {\r\n        // 处理陀螺仪输入\r\n        if (enableGyroscope && supportsGyroscope)\r\n        {\r\n            Vector3 gyroscopeData = Input.gyro.rotationRate;\r\n            if (gyroscopeData != lastGyroscopeData)\r\n            {\r\n                lastGyroscopeData = gyroscopeData;\r\n                if (enableDebugLogging)\r\n                {\r\n                    Debug.Log($\"陀螺仪数据: {gyroscopeData}\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        // 处理加速度计输入\r\n        if (enableAccelerometer && supportsAccelerometer)\r\n        {\r\n            Vector3 accelerometerData = Input.acceleration;\r\n            if (accelerometerData != lastAccelerometerData)\r\n            {\r\n                lastAccelerometerData = accelerometerData;\r\n                if (enableDebugLogging)\r\n                {\r\n                    Debug.Log($\"加速度计数据: {accelerometerData}\");\r\n                }\r\n            }\r\n        }\r\n        \r\n        // 处理触摸输入\r\n        if (enableMultitouch && supportsMultitouch)\r\n        {\r\n            HandleTouchInput();\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 处理触摸输入\r\n    /// </summary>\r\n    private void HandleTouchInput()\r\n    {\r\n        if (Input.touchCount > 0)\r\n        {\r\n            for (int i = 0; i < Input.touchCount; i++)\r\n            {\r\n                Touch touch = Input.GetTouch(i);\r\n                \r\n                switch (touch.phase)\r\n                {\r\n                    case TouchPhase.Began:\r\n                        if (enableDebugLogging)\r\n                        {\r\n                            Debug.Log($\"触摸开始: {touch.position}, 手指ID: {touch.fingerId}\");\r\n                        }\r\n                        break;\r\n                    case TouchPhase.Moved:\r\n                        if (enableDebugLogging)\r\n                        {\r\n                            Debug.Log($\"触摸移动: {touch.position}, 手指ID: {touch.fingerId}\");\r\n                        }\r\n                        break;\r\n                    case TouchPhase.Ended:\r\n                        if (enableDebugLogging)\r\n                        {\r\n                            Debug.Log($\"触摸结束: {touch.position}, 手指ID: {touch.fingerId}\");\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 监控性能\r\n    /// </summary>\r\n    private void MonitorPerformance()\r\n    {\r\n        float fps = 1f / Time.deltaTime;\r\n        long memory = System.GC.GetTotalMemory(false);\r\n        \r\n        if (enableDebugLogging)\r\n        {\r\n            Debug.Log($\"性能监控: FPS={fps:F1}, 内存={memory / (1024 * 1024):F1}MB\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启动位置服务\r\n    /// </summary>\r\n    public void StartLocationService()\r\n    {\r\n        if (supportsLocationService)\r\n        {\r\n            StartCoroutine(StartLocationServiceCoroutine());\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启动位置服务协程\r\n    /// </summary>\r\n    private System.Collections.IEnumerator StartLocationServiceCoroutine()\r\n    {\r\n        Input.location.Start();\r\n        \r\n        int maxWait = 20;\r\n        while (Input.location.status == LocationServiceStatus.Initializing && maxWait > 0)\r\n        {\r\n            yield return new WaitForSeconds(1);\r\n            maxWait--;\r\n        }\r\n        \r\n        if (maxWait < 1)\r\n        {\r\n            Debug.Log(\"位置服务初始化超时\");\r\n            yield break;\r\n        }\r\n        \r\n        if (Input.location.status == LocationServiceStatus.Failed)\r\n        {\r\n            Debug.Log(\"位置服务启动失败\");\r\n            yield break;\r\n        }\r\n        \r\n        Debug.Log($\"位置服务启动成功: {Input.location.lastData.latitude}, {Input.location.lastData.longitude}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启动相机\r\n    /// </summary>\r\n    public void StartCamera()\r\n    {\r\n        if (supportsCamera)\r\n        {\r\n            // 这里可以实现相机功能\r\n            Debug.Log(\"相机功能已启动\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启动麦克风\r\n    /// </summary>\r\n    public void StartMicrophone()\r\n    {\r\n        if (supportsMicrophone)\r\n        {\r\n            // 这里可以实现麦克风功能\r\n            Debug.Log(\"麦克风功能已启动\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 触发震动\r\n    /// </summary>\r\n    public void TriggerVibration()\r\n    {\r\n        if (supportsVibration)\r\n        {\r\n            Handheld.Vibrate();\r\n            Debug.Log(\"震动已触发\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 触发触觉反馈\r\n    /// </summary>\r\n    public void TriggerHapticFeedback()\r\n    {\r\n        if (enableHapticFeedback)\r\n        {\r\n            // iOS触觉反馈\r\n            if (Application.platform == RuntimePlatform.IPhonePlayer)\r\n            {\r\n                // 这里可以调用iOS原生触觉反馈API\r\n                Debug.Log(\"触觉反馈已触发\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 捕获屏幕截图\r\n    /// </summary>\r\n    public void CaptureScreenshot()\r\n    {\r\n        if (enableScreenCapture)\r\n        {\r\n            string filename = $\"screenshot_{System.DateTime.Now:yyyyMMdd_HHmmss}.png\";\r\n            ScreenCapture.CaptureScreenshotAsTexture();\r\n            Debug.Log($\"屏幕截图已保存: {filename}\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 显示分享界面\r\n    /// </summary>\r\n    public void ShowShareSheet()\r\n    {\r\n        if (enableShareSheet)\r\n        {\r\n            // 这里可以实现iOS分享功能\r\n            Debug.Log(\"分享界面已显示\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 发送本地通知\r\n    /// </summary>\r\n    public void SendLocalNotification()\r\n    {\r\n        if (enableLocalNotifications)\r\n        {\r\n            // 这里可以实现iOS本地通知\r\n            Debug.Log(\"本地通知已发送\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取iOS设备详细信息\r\n    /// </summary>\r\n    public void GetiOSDeviceDetails()\r\n    {\r\n        Debug.Log(\"=== iOS设备详细信息 ===\");\r\n        Debug.Log($\"设备型号: {deviceModel}\");\r\n        Debug.Log($\"设备名称: {deviceName}\");\r\n        Debug.Log($\"系统版本: {systemVersion}\");\r\n        Debug.Log($\"设备标识符: {deviceIdentifier}\");\r\n        Debug.Log($\"设备类型: {(isIPad ? \"iPad\" : isIPhone ? \"iPhone\" : isIPod ? \"iPod\" : \"未知\")}\");\r\n        Debug.Log($\"电池电量: {batteryLevel:P0}\");\r\n        Debug.Log($\"充电状态: {(isCharging ? \"充电中\" : \"未充电\")}\");\r\n        Debug.Log($\"网络状态: {networkReachability}\");\r\n        Debug.Log($\"设备方向: {deviceOrientation}\");\r\n        Debug.Log($\"屏幕方向: {screenOrientation}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取iOS功能信息\r\n    /// </summary>\r\n    public void GetiOSFeaturesInfo()\r\n    {\r\n        Debug.Log(\"=== iOS功能信息 ===\");\r\n        Debug.Log($\"陀螺仪支持: {supportsGyroscope}\");\r\n        Debug.Log($\"加速度计支持: {supportsAccelerometer}\");\r\n        Debug.Log($\"位置服务支持: {supportsLocationService}\");\r\n        Debug.Log($\"相机支持: {supportsCamera}\");\r\n        Debug.Log($\"麦克风支持: {supportsMicrophone}\");\r\n        Debug.Log($\"震动支持: {supportsVibration}\");\r\n        Debug.Log($\"多点触控支持: {supportsMultitouch}\");\r\n        Debug.Log($\"Metal支持: {supportsMetal}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 测试iOS功能\r\n    /// </summary>\r\n    public void TestiOSFeatures()\r\n    {\r\n        Debug.Log(\"开始测试iOS功能\");\r\n        \r\n        // 测试震动\r\n        TriggerVibration();\r\n        \r\n        // 测试触觉反馈\r\n        TriggerHapticFeedback();\r\n        \r\n        // 测试位置服务\r\n        if (supportsLocationService)\r\n        {\r\n            StartLocationService();\r\n        }\r\n        \r\n        // 测试屏幕截图\r\n        if (enableScreenCapture)\r\n        {\r\n            CaptureScreenshot();\r\n        }\r\n        \r\n        Debug.Log(\"iOS功能测试完成\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 设置iOS配置\r\n    /// </summary>\r\n    public void SetiOSConfiguration()\r\n    {\r\n        // 设置屏幕方向\r\n        Screen.orientation = ScreenOrientation.Portrait;\r\n        \r\n        // 设置空闲计时器\r\n        Screen.sleepTimeout = SleepTimeout.SystemSetting;\r\n        \r\n        // 设置多点触控\r\n        Input.multiTouchEnabled = true;\r\n        \r\n        Debug.Log(\"iOS配置已设置\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 重置iOS设置\r\n    /// </summary>\r\n    public void ResetiOSSettings()\r\n    {\r\n        enableIdleTimer = true;\r\n        enableMultitouch = true;\r\n        enableGyroscope = true;\r\n        enableAccelerometer = true;\r\n        enableLocationService = false;\r\n        enableCamera = false;\r\n        enableMicrophone = false;\r\n        enableHapticFeedback = true;\r\n        enableScreenCapture = false;\r\n        enableShareSheet = false;\r\n        enableLocalNotifications = false;\r\n        enablePushNotifications = false;\r\n        \r\n        Debug.Log(\"iOS设置已重置\");\r\n    }\r\n\r\n    private void OnGUI()\r\n    {\r\n        GUILayout.BeginArea(new Rect(10, 10, 400, 800));\r\n        GUILayout.Label(\"iOS 平台特定功能演示\", UnityEditor.EditorStyles.boldLabel);\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"设备信息:\");\r\n        GUILayout.Label($\"设备: {deviceModel}\");\r\n        GUILayout.Label($\"名称: {deviceName}\");\r\n        GUILayout.Label($\"系统: {systemVersion}\");\r\n        GUILayout.Label($\"类型: {(isIPad ? \"iPad\" : isIPhone ? \"iPhone\" : isIPod ? \"iPod\" : \"未知\")}\");\r\n        GUILayout.Label($\"电池: {batteryLevel:P0}\");\r\n        GUILayout.Label($\"充电: {(isCharging ? \"是\" : \"否\")}\");\r\n        GUILayout.Label($\"网络: {networkReachability}\");\r\n        GUILayout.Label($\"方向: {deviceOrientation}\");\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"功能支持:\");\r\n        GUILayout.Label($\"陀螺仪: {(supportsGyroscope ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"加速度计: {(supportsAccelerometer ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"位置服务: {(supportsLocationService ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"相机: {(supportsCamera ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"麦克风: {(supportsMicrophone ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"震动: {(supportsVibration ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"多点触控: {(supportsMultitouch ? \"支持\" : \"不支持\")}\");\r\n        GUILayout.Label($\"Metal: {(supportsMetal ? \"支持\" : \"不支持\")}\");\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"功能设置:\");\r\n        enableIdleTimer = GUILayout.Toggle(enableIdleTimer, \"启用空闲计时器\");\r\n        enableMultitouch = GUILayout.Toggle(enableMultitouch, \"启用多点触控\");\r\n        enableGyroscope = GUILayout.Toggle(enableGyroscope, \"启用陀螺仪\");\r\n        enableAccelerometer = GUILayout.Toggle(enableAccelerometer, \"启用加速度计\");\r\n        enableLocationService = GUILayout.Toggle(enableLocationService, \"启用位置服务\");\r\n        enableCamera = GUILayout.Toggle(enableCamera, \"启用相机\");\r\n        enableMicrophone = GUILayout.Toggle(enableMicrophone, \"启用麦克风\");\r\n        enableHapticFeedback = GUILayout.Toggle(enableHapticFeedback, \"启用触觉反馈\");\r\n        enableScreenCapture = GUILayout.Toggle(enableScreenCapture, \"启用屏幕捕获\");\r\n        enableShareSheet = GUILayout.Toggle(enableShareSheet, \"启用分享功能\");\r\n        enableLocalNotifications = GUILayout.Toggle(enableLocalNotifications, \"启用本地通知\");\r\n        enablePushNotifications = GUILayout.Toggle(enablePushNotifications, \"启用推送通知\");\r\n        \r\n        GUILayout.Space(10);\r\n        \r\n        if (GUILayout.Button(\"获取设备详情\"))\r\n        {\r\n            GetiOSDeviceDetails();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"获取功能信息\"))\r\n        {\r\n            GetiOSFeaturesInfo();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"测试iOS功能\"))\r\n        {\r\n            TestiOSFeatures();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"启动位置服务\"))\r\n        {\r\n            StartLocationService();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"触发震动\"))\r\n        {\r\n            TriggerVibration();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"触发触觉反馈\"))\r\n        {\r\n            TriggerHapticFeedback();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"捕获屏幕截图\"))\r\n        {\r\n            CaptureScreenshot();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"显示分享界面\"))\r\n        {\r\n            ShowShareSheet();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"发送本地通知\"))\r\n        {\r\n            SendLocalNotification();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"设置iOS配置\"))\r\n        {\r\n            SetiOSConfiguration();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"重置iOS设置\"))\r\n        {\r\n            ResetiOSSettings();\r\n        }\r\n        \r\n        GUILayout.EndArea();\r\n    }\r\n\r\n    private void OnDestroy()\r\n    {\r\n        // 停止位置服务\r\n        if (Input.location.isEnabledByUser)\r\n        {\r\n            Input.location.Stop();\r\n        }\r\n    }\r\n} "
        }
    ]
}