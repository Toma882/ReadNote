{
    "sourceFile": "Assets/UnityEditor/Chapter 5 EditorUtility/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746884278441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746884278441,
            "name": "Commit-0",
            "content": "# Unity编辑器扩展 - Chapter 5: EditorUtility\r\n\r\n## 概述\r\n\r\n本章专注于Unity编辑器实用工具(EditorUtility)的开发，展示了如何利用Unity提供的编辑器工具类来扩展编辑器功能。EditorUtility类及其相关类提供了丰富的API，用于在编辑器中执行常见操作，如文件对话框、进度条、资源管理等，从而提高开发效率和用户体验。\r\n\r\n## 核心特征\r\n\r\n### EditorUtility的基本特征\r\n\r\n| 特征 | 描述 |\r\n|------|------|\r\n| **文件对话框** | 提供打开/保存文件对话框，允许用户选择文件或目录 |\r\n| **资源管理** | 提供加载、保存、创建资源的工具方法 |\r\n| **进度条** | 支持可视化显示长时间操作的进度 |\r\n| **对话框** | 显示消息、警告或错误对话框与用户交互 |\r\n| **资源导入/导出** | 辅助处理资源的导入和导出过程 |\r\n| **编辑器持久化** | 提供编辑器数据的持久化存储机制 |\r\n| **资源检视** | 允许在编辑器中预览资源 |\r\n\r\n### EditorPrefs系统\r\n\r\nEditorPrefs是Unity提供的编辑器持久化系统，用于在编辑器会话之间保存和读取设置。\r\n\r\n| 方法 | 用途 | 示例 |\r\n|------|------|------|\r\n| **SetInt/GetInt** | 存储/读取整数值 | `EditorPrefs.SetInt(\"MyWindow.ShowDetails\", showDetails ? 1 : 0);` |\r\n| **SetFloat/GetFloat** | 存储/读取浮点值 | `EditorPrefs.SetFloat(\"MyTool.Threshold\", 0.75f);` |\r\n| **SetString/GetString** | 存储/读取字符串 | `EditorPrefs.SetString(\"LastOpenProject\", projectPath);` |\r\n| **SetBool/GetBool** | 存储/读取布尔值 | `EditorPrefs.SetBool(\"AdvancedMode\", isAdvanced);` |\r\n| **HasKey** | 检查键是否存在 | `if(EditorPrefs.HasKey(\"FirstRun\")) {...}` |\r\n| **DeleteKey** | 删除特定键 | `EditorPrefs.DeleteKey(\"TemporarySetting\");` |\r\n| **DeleteAll** | 删除所有键 | `EditorPrefs.DeleteAll();` //慎用 |\r\n\r\n### 文件对话框系统\r\n\r\n| 方法 | 用途 | 返回值 |\r\n|------|------|------|\r\n| **OpenFilePanel** | 打开文件选择对话框 | 所选文件的完整路径或取消时为空字符串 |\r\n| **OpenFolderPanel** | 打开文件夹选择对话框 | 所选文件夹的完整路径或取消时为空字符串 |\r\n| **SaveFilePanel** | 打开保存文件对话框 | 保存文件的完整路径或取消时为空字符串 |\r\n| **SaveFilePanelInProject** | 在项目内保存文件 | 相对于项目的文件路径或取消时为空字符串 |\r\n| **OpenFilePanelWithFilters** | 使用过滤器打开文件 | 所选文件的完整路径或取消时为空字符串 |\r\n\r\n### 进度条和对话框系统\r\n\r\n| 方法 | 用途 | 返回值 |\r\n|------|------|------|\r\n| **DisplayDialog** | 显示带有确认/取消按钮的对话框 | 用户选择确认时返回true，否则false |\r\n| **DisplayDialogComplex** | 显示有三个选项的对话框 | 返回用户选择的按钮索引(0,1,2) |\r\n| **DisplayProgressBar** | 显示进度条 | 无返回值，需要手动关闭 |\r\n| **ClearProgressBar** | 清除/关闭进度条 | 无返回值 |\r\n| **DisplayCancelableProgressBar** | 显示可取消的进度条 | 如果用户取消则返回true |\r\n\r\n### 资源管理工具\r\n\r\n| 方法 | 用途 | 示例 |\r\n|------|------|------|\r\n| **CreateFolder** | 在项目中创建文件夹 | `EditorUtility.CreateFolder(\"Assets\", \"NewFolder\");` |\r\n| **RevealInFinder** | 在文件浏览器中显示文件 | `EditorUtility.RevealInFinder(\"Assets/MyTexture.png\");` |\r\n| **SetDirty** | 将对象标记为已修改 | `EditorUtility.SetDirty(myScriptableObject);` |\r\n| **CopySerialized** | 复制序列化对象 | `EditorUtility.CopySerialized(source, destination);` |\r\n| **CompressTexture** | 压缩纹理 | `EditorUtility.CompressTexture(texture, format, quality);` |\r\n| **IsPersistent** | 检查对象是否持久化 | `if(EditorUtility.IsPersistent(obj)) {...}` |\r\n\r\n## 思维导图\r\n\r\n```\r\nUnity EditorUtility系统\r\n├── 文件对话框工具\r\n│   ├── OpenFilePanel - 打开文件选择对话框\r\n│   │   ├── 参数：标题、目录、扩展名\r\n│   │   └── 返回：所选文件路径\r\n│   ├── OpenFolderPanel - 打开文件夹选择对话框\r\n│   │   ├── 参数：标题、目录、默认名称\r\n│   │   └── 返回：所选文件夹路径\r\n│   ├── SaveFilePanel - 打开保存文件对话框\r\n│   │   ├── 参数：标题、目录、默认名称、扩展名\r\n│   │   └── 返回：保存文件路径\r\n│   ├── SaveFilePanelInProject - 在项目内保存文件\r\n│   │   ├── 参数：标题、默认名称、扩展名、消息\r\n│   │   └── 返回：相对于项目的文件路径\r\n│   └── OpenFilePanelWithFilters - 使用过滤器打开文件\r\n│       ├── 参数：标题、目录、过滤器数组\r\n│       └── 返回：所选文件路径\r\n│\r\n├── 进度指示工具\r\n│   ├── DisplayProgressBar - 显示进度条\r\n│   │   ├── 参数：标题、信息、进度(0-1)\r\n│   │   └── 用途：显示长时间操作的进度\r\n│   ├── ClearProgressBar - 清除进度条\r\n│   │   └── 用途：操作完成后移除进度条\r\n│   └── DisplayCancelableProgressBar - 显示可取消的进度条\r\n│       ├── 参数：标题、信息、进度(0-1)\r\n│       ├── 返回：用户是否取消操作\r\n│       └── 用途：允许用户中断长时间操作\r\n│\r\n├── 对话框工具\r\n│   ├── DisplayDialog - 显示简单对话框\r\n│   │   ├── 参数：标题、消息、确认按钮文本、取消按钮文本(可选)\r\n│   │   ├── 返回：用户是否确认\r\n│   │   └── 用途：显示信息或请求确认\r\n│   └── DisplayDialogComplex - 显示复杂对话框\r\n│       ├── 参数：标题、消息、确认按钮、替代按钮、取消按钮\r\n│       ├── 返回：用户选择的按钮索引(0,1,2)\r\n│       └── 用途：提供多个选择选项\r\n│\r\n├── 编辑器持久化系统\r\n│   ├── EditorPrefs类\r\n│   │   ├── 数据存储方法\r\n│   │   │   ├── SetInt/GetInt - 存储/读取整数\r\n│   │   │   ├── SetFloat/GetFloat - 存储/读取浮点数\r\n│   │   │   ├── SetString/GetString - 存储/读取字符串\r\n│   │   │   └── SetBool/GetBool - 存储/读取布尔值\r\n│   │   ├── 管理方法\r\n│   │   │   ├── HasKey - 检查键是否存在\r\n│   │   │   ├── DeleteKey - 删除特定键\r\n│   │   │   └── DeleteAll - 删除所有键\r\n│   │   └── 应用场景\r\n│   │       ├── 编辑器窗口状态保存\r\n│   │       ├── 用户首选项管理\r\n│   │       └── 工具设置持久化\r\n│   │\r\n│   └── 序列化系统\r\n│       ├── SetDirty - 标记对象为已修改\r\n│       ├── CopySerialized - 复制序列化对象\r\n│       └── IsPersistent - 检查对象是否持久化\r\n│\r\n├── 资源管理工具\r\n│   ├── 资源操作\r\n│   │   ├── CreateFolder - 在项目中创建文件夹\r\n│   │   ├── CopySerializedIfDifferent - 必要时复制序列化对象\r\n│   │   ├── CollectDependencies - 收集对象依赖项\r\n│   │   └── DisplayAssetPreview - 显示资源预览\r\n│   │\r\n│   ├── 文件系统交互\r\n│   │   ├── RevealInFinder - 在文件浏览器中显示文件\r\n│   │   ├── OpenWithDefaultApp - 用默认应用打开文件\r\n│   │   └── MoveFileOrDirectory - 移动文件或目录\r\n│   │\r\n│   └── 资源处理\r\n│       ├── CompressTexture - 压缩纹理\r\n│       ├── SaveAsPrefabAsset - 保存为预制体资源\r\n│       └── ReloadWindowLayoutMenu - 重新加载窗口布局菜单\r\n│\r\n├── 实用工具案例\r\n│   ├── AssetsDuplicateChecker - 资源重复检查器\r\n│   │   ├── 功能\r\n│   │   │   ├── 扫描项目中的重复资源\r\n│   │   │   ├── 显示重复资源列表\r\n│   │   │   ├── 提供快速清理选项\r\n│   │   │   └── 生成重复资源报告\r\n│   │   ├── 实现技术\r\n│   │   │   ├── 使用EditorUtility.DisplayProgressBar显示扫描进度\r\n│   │   │   ├── 使用EditorUtility.DisplayDialog提示操作确认\r\n│   │   │   └── 使用EditorPrefs存储上次扫描设置\r\n│   │\r\n│   ├── AssetBundleBuilder - 资源包构建工具\r\n│   │   ├── 功能\r\n│   │   │   ├── 配置资源包设置\r\n│   │   │   ├── 构建资源包\r\n│   │   │   ├── 查看资源包依赖关系\r\n│   │   │   └── 管理资源包标签\r\n│   │   ├── 实现技术\r\n│   │   │   ├── 使用EditorUtility.SaveFilePanel选择构建输出路径\r\n│   │   │   ├── 使用EditorUtility.DisplayProgressBar显示构建进度\r\n│   │   │   └── 使用EditorPrefs存储构建设置\r\n│   │\r\n│   ├── BatchRenamer - 批量重命名工具\r\n│   │   ├── 功能\r\n│   │   │   ├── 根据模式批量重命名资源\r\n│   │   │   ├── 预览重命名结果\r\n│   │   │   ├── 支持序列号、前缀、后缀和替换操作\r\n│   │   │   └── 支持撤销操作\r\n│   │   ├── 实现技术\r\n│   │   │   ├── 使用EditorUtility.DisplayProgressBar显示操作进度\r\n│   │   │   ├── 使用EditorUtility.DisplayDialog确认批量操作\r\n│   │   │   └── 使用AssetDatabase处理资源重命名\r\n│   │\r\n│   └── TextureProcessor - 纹理处理工具\r\n│       ├── 功能\r\n│       │   ├── 批量处理纹理导入设置\r\n│       │   ├── 优化纹理大小和格式\r\n│       │   ├── 生成纹理图集\r\n│       │   └── 分析纹理内存使用\r\n│       ├── 实现技术\r\n│       │   ├── 使用EditorUtility.CompressTexture压缩纹理\r\n│       │   ├── 使用EditorUtility.DisplayCancelableProgressBar显示处理进度\r\n│       │   └── 使用EditorPrefs存储处理设置\r\n│\r\n└── 最佳实践与进阶技巧\r\n    ├── 性能考虑\r\n    │   ├── 避免频繁调用SetDirty\r\n    │   ├── 批量处理资源操作\r\n    │   ├── 使用异步操作处理耗时任务\r\n    │   └── 合理使用进度条减轻用户等待感\r\n    │\r\n    ├── 用户体验\r\n    │   ├── 提供清晰的进度反馈\r\n    │   ├── 使用恰当的对话框文本\r\n    │   ├── 保存用户偏好设置\r\n    │   └── 提供操作撤销机制\r\n    │\r\n    ├── 错误处理\r\n    │   ├── 优雅处理用户取消操作\r\n    │   ├── 提供有意义的错误消息\r\n    │   ├── 防止数据丢失的确认对话框\r\n    │   └── 记录操作日志便于调试\r\n    │\r\n    └── 集成与扩展\r\n        ├── 与版本控制系统集成\r\n        ├── 编写可重用的工具库\r\n        ├── 添加快捷键支持\r\n        └── 构建完整的资源管理工作流\r\n```\r\n\r\n## UML类图\r\n\r\n```\r\n+--------------------------+         +----------------------------+\r\n|      EditorUtility       |         |        EditorPrefs         |\r\n+--------------------------+         +----------------------------+\r\n|                          |         |                            |\r\n+--------------------------+         +----------------------------+\r\n| + DisplayDialog()        |         | + SetInt()/GetInt()        |\r\n| + DisplayProgressBar()   |         | + SetFloat()/GetFloat()    |\r\n| + ClearProgressBar()     |         | + SetString()/GetString()  |\r\n| + OpenFilePanel()        |         | + SetBool()/GetBool()      |\r\n| + SaveFilePanel()        |         | + HasKey()                 |\r\n| + CreateFolder()         |         | + DeleteKey()              |\r\n| + RevealInFinder()       |         | + DeleteAll()              |\r\n| + SetDirty()             |         +----------------------------+\r\n| + IsPersistent()         |\r\n| + CompressTexture()      |\r\n+--------------------------+\r\n\r\n+-----------------------------+        +---------------------------+\r\n|   AssetsDuplicateChecker    |        |     AssetBundleBuilder    |\r\n+-----------------------------+        +---------------------------+\r\n| - duplicateAssets           |        | - bundleConfigs           |\r\n| - scanProgress              |        | - buildTarget             |\r\n| - lastScanTime              |        | - outputPath              |\r\n+-----------------------------+        +---------------------------+\r\n| + OnGUI()                   |        | + OnGUI()                 |\r\n| + ScanProject()             |        | + BuildAllBundles()       |\r\n| + RemoveDuplicates()        |        | + SaveBundleConfig()      |\r\n| - ShowScanResults()         |        | - ShowDependencies()      |\r\n| - DrawProgressBar()         |        | - SelectOutputPath()      |\r\n+-----------------------------+        +---------------------------+\r\n\r\n+-----------------------------+        +---------------------------+\r\n|       BatchRenamer          |        |     TextureProcessor      |\r\n+-----------------------------+        +---------------------------+\r\n| - selectedAssets            |        | - selectedTextures        |\r\n| - renamePattern             |        | - formatSettings          |\r\n| - previewResults            |        | - compressionSettings     |\r\n| - startIndex                |        | - batchProgress           |\r\n+-----------------------------+        +---------------------------+\r\n| + OnGUI()                   |        | + OnGUI()                 |\r\n| + GeneratePreview()         |        | + ProcessTextures()       |\r\n| + ApplyRenaming()           |        | + GenerateAtlas()         |\r\n| - BuildAssetList()          |        | - ShowTextureInfo()       |\r\n| - DrawPatternOptions()      |        | - CompressAllTextures()   |\r\n+-----------------------------+        +---------------------------+\r\n\r\n+-------------------------------+\r\n|     EditorCoroutineUtility    |\r\n+-------------------------------+\r\n|                               |\r\n+-------------------------------+\r\n| + StartCoroutine()            |\r\n| + StartCoroutineOwnerless()   |\r\n| + StopCoroutine()             |\r\n+-------------------------------+\r\n```\r\n\r\n## 重要的类和接口\r\n\r\n### EditorUtility核心类\r\n\r\n| 类/接口名称 | 类型 | 描述 | 重要方法/属性 |\r\n|-----------|-----|------|--------------|\r\n| `EditorUtility` | 静态类 | 提供编辑器通用实用工具 | `DisplayDialog()`, `DisplayProgressBar()`, `OpenFilePanel()` |\r\n| `EditorPrefs` | 静态类 | 编辑器持久化系统 | `SetInt()/GetInt()`, `SetString()/GetString()`, `HasKey()` |\r\n| `AssetDatabase` | 静态类 | 资源数据库管理 | `CreateAsset()`, `SaveAssets()`, `Refresh()` |\r\n| `Selection` | 静态类 | 编辑器选择管理 | `activeObject`, `objects`, `selectionChanged` |\r\n| `EditorApplication` | 静态类 | 编辑器应用程序控制 | `update`, `delayCall`, `ExecuteMenuItem()` |\r\n| `EditorCoroutineUtility` | 静态类 | 编辑器协程工具 | `StartCoroutine()`, `StopCoroutine()` |\r\n\r\n### 实用工具类\r\n\r\n| 类/接口名称 | 类型 | 描述 | 重要方法/属性 |\r\n|-----------|-----|------|--------------|\r\n| `AssetsDuplicateChecker` | 编辑器窗口 | 资源重复检查工具 | `ScanProject()`, `RemoveDuplicates()` |\r\n| `AssetBundleBuilder` | 编辑器窗口 | 资源包构建工具 | `BuildAllBundles()`, `ShowDependencies()` |\r\n| `BatchRenamer` | 编辑器窗口 | 批量重命名工具 | `GeneratePreview()`, `ApplyRenaming()` |\r\n| `TextureProcessor` | 编辑器窗口 | 纹理处理工具 | `ProcessTextures()`, `GenerateAtlas()` |\r\n\r\n### 辅助类和结构\r\n\r\n| 类/接口名称 | 类型 | 描述 | 重要方法/属性 |\r\n|-----------|-----|------|--------------|\r\n| `DuplicateAssetInfo` | 数据类 | 重复资源信息 | `path`, `size`, `hash` |\r\n| `BundleConfig` | 数据类 | 资源包配置 | `name`, `assets`, `options` |\r\n| `RenameOperation` | 枚举 | 重命名操作类型 | `Prefix`, `Suffix`, `Replace`, `Sequence` |\r\n| `TextureImportSettings` | 结构体 | 纹理导入设置 | `format`, `maxSize`, `compressionQuality` |\r\n\r\n## 相关官方文档\r\n\r\n1. [Unity EditorUtility 类参考](https://docs.unity3d.com/ScriptReference/EditorUtility.html)\r\n2. [Unity EditorPrefs 类参考](https://docs.unity3d.com/ScriptReference/EditorPrefs.html)\r\n3. [Unity AssetDatabase 类参考](https://docs.unity3d.com/ScriptReference/AssetDatabase.html)\r\n4. [Unity 编辑器扩展文件操作](https://docs.unity3d.com/Manual/ExtendingTheEditor-ScriptOperations.html)\r\n5. [Unity 编辑器进度条和对话框](https://docs.unity3d.com/ScriptReference/EditorUtility.DisplayProgressBar.html)\r\n6. [Unity 编辑器协程工具](https://docs.unity3d.com/Packages/com.unity.editorcoroutines@1.0/manual/index.html)\r\n7. [Unity AssetBundle 构建系统](https://docs.unity3d.com/Manual/AssetBundles-Building.html)\r\n8. [Unity 纹理导入设置](https://docs.unity3d.com/Manual/class-TextureImporter.html)\r\n\r\n## 最佳实践\r\n\r\n1. **性能考虑**\r\n   - 避免频繁调用`SetDirty`方法，特别是在循环中\r\n   - 对大量资源的操作应提供进度显示和取消选项\r\n   - 耗时操作应考虑使用编辑器协程或异步处理\r\n\r\n2. **用户体验**\r\n   - 始终提供清晰的操作反馈和进度显示\r\n   - 危险操作前使用对话框确认\r\n   - 保存用户的首选项和工具设置\r\n   - 提供操作预览功能减少错误\r\n\r\n3. **代码组织**\r\n   - 将UI逻辑与业务逻辑分离\r\n   - 创建可重用的工具类和扩展方法\r\n   - 采用模块化设计便于维护和扩展\r\n\r\n4. **调试与错误处理**\r\n   - 提供详细的操作日志\r\n   - 优雅处理用户取消的情况\r\n   - 对关键资源操作提供备份机制\r\n   - 在可能出错的地方使用try-catch块\r\n\r\n## 应用场景\r\n\r\n1. **资源管理工具**\r\n   - 批量处理资源导入设置\r\n   - 清理未使用资源\r\n   - 优化项目大小和内存使用\r\n\r\n2. **工作流自动化**\r\n   - 自动化重复性任务\r\n   - 创建资源包和发布流程\r\n   - 生成定制报告和统计\r\n\r\n3. **质量保证工具**\r\n   - 项目规范检查器\r\n   - 性能瓶颈分析\r\n   - 资源使用监控\r\n\r\n4. **团队协作工具**\r\n   - 资源命名和组织工具\r\n   - 版本控制辅助功能\r\n   - 文档生成和管理 "
        }
    ]
}