{
    "sourceFile": "Assets/UnityEditor/Chapter 8 UnityAPI/UnityEngine/Analytics/AnalyticsExample.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1750932213001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750932244845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n /// </summary>\r\n public class AnalyticsExample : MonoBehaviour\r\n {\r\n     [Header(\"Analytics 设置\")]\r\n-    [SerializeField] private string customEventName = \"custom_event\";\r\n-    [SerializeField] private int score = 100;\r\n-    [SerializeField] private string userId = \"user_001\";\r\n-    [SerializeField] private bool sendStandardEvent = false;\r\n+    [SerializeField] private string customEventName = \"custom_event\"; //自定义事件名称\r\n+    [SerializeField] private int score = 100; //分数\r\n+    [SerializeField] private string userId = \"user_001\"; //用户ID\r\n+    [SerializeField] private bool sendStandardEvent = false; //是否发送标准事件\r\n     [SerializeField] private bool sendCustomEvent = false;\r\n \r\n     private void Start()\r\n     {\r\n"
                },
                {
                    "date": 1750932257409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,15 @@\n     [SerializeField] private string customEventName = \"custom_event\"; //自定义事件名称\r\n     [SerializeField] private int score = 100; //分数\r\n     [SerializeField] private string userId = \"user_001\"; //用户ID\r\n     [SerializeField] private bool sendStandardEvent = false; //是否发送标准事件\r\n-    [SerializeField] private bool sendCustomEvent = false;\r\n+    [SerializeField] private bool sendCustomEvent = false; //是否发送自定义事件\r\n \r\n     private void Start()\r\n     {\r\n #if UNITY_ANALYTICS\r\n         Analytics.enabled = true;\r\n-        Analytics.deviceStatsEnabled = true;\r\n+        Analytics.deviceStatsEnabled = true;//\r\n         Analytics.limitUserTracking = false;\r\n         Debug.Log(\"Analytics 已启用\");\r\n #endif\r\n     }\r\n"
                },
                {
                    "date": 1750932266875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     private void Start()\r\n     {\r\n #if UNITY_ANALYTICS\r\n         Analytics.enabled = true;\r\n-        Analytics.deviceStatsEnabled = true;//\r\n-        Analytics.limitUserTracking = false;\r\n+        Analytics.deviceStatsEnabled = true;//设备统计\r\n+        Analytics.limitUserTracking = false;//限制用户跟踪\r\n         Debug.Log(\"Analytics 已启用\");\r\n #endif\r\n     }\r\n \r\n@@ -46,11 +46,11 @@\n     /// </summary>\r\n     public void SendStandardEvent()\r\n     {\r\n #if UNITY_ANALYTICS\r\n-        AnalyticsEvent.LevelStart(1);\r\n-        AnalyticsEvent.LevelComplete(1);\r\n-        AnalyticsEvent.ItemAcquired(AcquisitionType.Soft, \"coin\", 10, \"shop\", \"level1\");\r\n+        AnalyticsEvent.LevelStart(1);//关卡开始\r\n+        AnalyticsEvent.LevelComplete(1);//关卡完成\r\n+        AnalyticsEvent.ItemAcquired(AcquisitionType.Soft, \"coin\", 10, \"shop\", \"level1\");//物品获取\r\n         Debug.Log(\"已发送标准事件\");\r\n #else\r\n         Debug.LogWarning(\"未启用Unity Analytics模块\");\r\n #endif\r\n"
                }
            ],
            "date": 1750932213001,
            "name": "Commit-0",
            "content": "using UnityEngine;\r\n#if UNITY_ANALYTICS\r\nusing UnityEngine.Analytics;\r\n#endif\r\nusing System.Collections.Generic;\r\n\r\n/// <summary>\r\n/// UnityEngine.Analytics 命名空间案例演示\r\n/// 展示自定义事件、标准事件、会话管理等核心功能\r\n/// </summary>\r\npublic class AnalyticsExample : MonoBehaviour\r\n{\r\n    [Header(\"Analytics 设置\")]\r\n    [SerializeField] private string customEventName = \"custom_event\";\r\n    [SerializeField] private int score = 100;\r\n    [SerializeField] private string userId = \"user_001\";\r\n    [SerializeField] private bool sendStandardEvent = false;\r\n    [SerializeField] private bool sendCustomEvent = false;\r\n\r\n    private void Start()\r\n    {\r\n#if UNITY_ANALYTICS\r\n        Analytics.enabled = true;\r\n        Analytics.deviceStatsEnabled = true;\r\n        Analytics.limitUserTracking = false;\r\n        Debug.Log(\"Analytics 已启用\");\r\n#endif\r\n    }\r\n\r\n    private void Update()\r\n    {\r\n        if (sendStandardEvent)\r\n        {\r\n            sendStandardEvent = false;\r\n            SendStandardEvent();\r\n        }\r\n        if (sendCustomEvent)\r\n        {\r\n            sendCustomEvent = false;\r\n            SendCustomEvent();\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 发送标准事件\r\n    /// </summary>\r\n    public void SendStandardEvent()\r\n    {\r\n#if UNITY_ANALYTICS\r\n        AnalyticsEvent.LevelStart(1);\r\n        AnalyticsEvent.LevelComplete(1);\r\n        AnalyticsEvent.ItemAcquired(AcquisitionType.Soft, \"coin\", 10, \"shop\", \"level1\");\r\n        Debug.Log(\"已发送标准事件\");\r\n#else\r\n        Debug.LogWarning(\"未启用Unity Analytics模块\");\r\n#endif\r\n    }\r\n\r\n    /// <summary>\r\n    /// 发送自定义事件\r\n    /// </summary>\r\n    public void SendCustomEvent()\r\n    {\r\n#if UNITY_ANALYTICS\r\n        var eventData = new Dictionary<string, object>\r\n        {\r\n            { \"score\", score },\r\n            { \"userId\", userId },\r\n            { \"time\", System.DateTime.Now.ToString() }\r\n        };\r\n        Analytics.CustomEvent(customEventName, eventData);\r\n        Debug.Log($\"已发送自定义事件: {customEventName}\");\r\n#else\r\n        Debug.LogWarning(\"未启用Unity Analytics模块\");\r\n#endif\r\n    }\r\n\r\n    private void OnGUI()\r\n    {\r\n        GUILayout.BeginArea(new Rect(10, 10, 350, 250));\r\n        GUILayout.Label(\"Analytics 演示\", UnityEditor.EditorStyles.boldLabel);\r\n        customEventName = GUILayout.TextField(customEventName);\r\n        userId = GUILayout.TextField(userId);\r\n        score = int.TryParse(GUILayout.TextField(score.ToString()), out var s) ? s : score;\r\n        if (GUILayout.Button(\"发送标准事件\"))\r\n        {\r\n            SendStandardEvent();\r\n        }\r\n        if (GUILayout.Button(\"发送自定义事件\"))\r\n        {\r\n            SendCustomEvent();\r\n        }\r\n        GUILayout.EndArea();\r\n    }\r\n} "
        }
    ]
}