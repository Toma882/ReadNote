{
    "sourceFile": "Assets/UnityEditor/Chapter 8 UnityAPI/UnityEngine/Apple/AppleExample.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1750933578298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1750933578298,
            "name": "Commit-0",
            "content": "using UnityEngine;\r\n\r\n/// <summary>\r\n/// UnityEngine.Apple 命名空间案例演示\r\n/// 展示Apple平台特定功能、iOS集成、Metal渲染等核心功能\r\n/// </summary>\r\npublic class AppleExample : MonoBehaviour\r\n{\r\n    [Header(\"Apple设备信息\")]\r\n    [SerializeField] private string deviceModel = \"\"; //设备型号\r\n    [SerializeField] private string deviceName = \"\"; //设备名称\r\n    [SerializeField] private string iosVersion = \"\"; //iOS版本\r\n    [SerializeField] private bool isIPhone = false; //是否iPhone\r\n    [SerializeField] private bool isIPad = false; //是否iPad\r\n    [SerializeField] private bool isIPod = false; //是否iPod\r\n\r\n    [Header(\"Metal渲染\")]\r\n    [SerializeField] private bool useMetal = true; //使用Metal渲染\r\n    [SerializeField] private bool enableMetalValidation = false; //启用Metal验证\r\n    [SerializeField] private bool enableMetalDebugging = false; //启用Metal调试\r\n    [SerializeField] private int metalSampleCount = 1; //Metal采样数\r\n\r\n    [Header(\"iOS功能\")]\r\n    [SerializeField] private bool enableHapticFeedback = true; //启用触觉反馈\r\n    [SerializeField] private bool enableARKit = false; //启用ARKit\r\n    [SerializeField] private bool enableCoreML = false; //启用CoreML\r\n    [SerializeField] private bool enableGameCenter = false; //启用GameCenter\r\n\r\n    [Header(\"Apple设置\")]\r\n    [SerializeField] private bool enableRetinaDisplay = true; //启用视网膜显示\r\n    [SerializeField] private bool enableProMotion = false; //启用ProMotion\r\n    [SerializeField] private int targetFrameRate = 60; //目标帧率\r\n    [SerializeField] private bool enableMultithreadedRendering = true; //多线程渲染\r\n\r\n    [Header(\"iOS权限\")]\r\n    [SerializeField] private bool cameraPermission = false; //相机权限\r\n    [SerializeField] private bool microphonePermission = false; //麦克风权限\r\n    [SerializeField] private bool locationPermission = false; //位置权限\r\n    [SerializeField] private bool photoLibraryPermission = false; //照片库权限\r\n\r\n    private void Start()\r\n    {\r\n        InitializeAppleSystem();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 初始化Apple系统\r\n    /// </summary>\r\n    private void InitializeAppleSystem()\r\n    {\r\n        // 获取设备信息\r\n        GetDeviceInfo();\r\n        \r\n        // 检查权限\r\n        CheckPermissions();\r\n        \r\n        // 设置Apple特定功能\r\n        SetupAppleFeatures();\r\n        \r\n        Debug.Log(\"Apple系统初始化完成\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取设备信息\r\n    /// </summary>\r\n    private void GetDeviceInfo()\r\n    {\r\n        deviceModel = SystemInfo.deviceModel;\r\n        deviceName = SystemInfo.deviceName;\r\n        iosVersion = SystemInfo.operatingSystem;\r\n        \r\n        // 检测设备类型\r\n        isIPhone = deviceModel.Contains(\"iPhone\");\r\n        isIPad = deviceModel.Contains(\"iPad\");\r\n        isIPod = deviceModel.Contains(\"iPod\");\r\n        \r\n        Debug.Log($\"Apple设备: {deviceModel} ({deviceName})\");\r\n        Debug.Log($\"iOS版本: {iosVersion}\");\r\n        Debug.Log($\"设备类型: {(isIPhone ? \"iPhone\" : isIPad ? \"iPad\" : isIPod ? \"iPod\" : \"Unknown\")}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 检查权限\r\n    /// </summary>\r\n    private void CheckPermissions()\r\n    {\r\n        // 检查各种权限状态\r\n        cameraPermission = CheckPermission(\"NSCameraUsageDescription\");\r\n        microphonePermission = CheckPermission(\"NSMicrophoneUsageDescription\");\r\n        locationPermission = CheckPermission(\"NSLocationWhenInUseUsageDescription\");\r\n        photoLibraryPermission = CheckPermission(\"NSPhotoLibraryUsageDescription\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 检查权限\r\n    /// </summary>\r\n    /// <param name=\"permission\">权限名称</param>\r\n    /// <returns>是否有权限</returns>\r\n    private bool CheckPermission(string permission)\r\n    {\r\n        // 这里应该调用iOS API检查权限\r\n        // 由于Unity的限制，这里返回模拟值\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// 设置Apple特定功能\r\n    /// </summary>\r\n    private void SetupAppleFeatures()\r\n    {\r\n        // 设置目标帧率\r\n        Application.targetFrameRate = targetFrameRate;\r\n        \r\n        // 设置多线程渲染\r\n        QualitySettings.multiThreadedRendering = enableMultithreadedRendering;\r\n        \r\n        // 设置Metal渲染\r\n        if (useMetal)\r\n        {\r\n            SetupMetalRendering();\r\n        }\r\n        \r\n        // 设置ProMotion\r\n        if (enableProMotion)\r\n        {\r\n            SetupProMotion();\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 设置Metal渲染\r\n    /// </summary>\r\n    private void SetupMetalRendering()\r\n    {\r\n        // 这里应该调用Metal API设置渲染\r\n        Debug.Log(\"Metal渲染已设置\");\r\n        \r\n        if (enableMetalValidation)\r\n        {\r\n            Debug.Log(\"Metal验证已启用\");\r\n        }\r\n        \r\n        if (enableMetalDebugging)\r\n        {\r\n            Debug.Log(\"Metal调试已启用\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 设置ProMotion\r\n    /// </summary>\r\n    private void SetupProMotion()\r\n    {\r\n        // 设置ProMotion高刷新率\r\n        Application.targetFrameRate = 120;\r\n        Debug.Log(\"ProMotion已启用 (120Hz)\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 请求权限\r\n    /// </summary>\r\n    /// <param name=\"permission\">权限名称</param>\r\n    public void RequestPermission(string permission)\r\n    {\r\n        // 这里应该调用iOS API请求权限\r\n        Debug.Log($\"请求权限: {permission}\");\r\n        \r\n        // 模拟权限授予\r\n        switch (permission)\r\n        {\r\n            case \"NSCameraUsageDescription\":\r\n                cameraPermission = true;\r\n                break;\r\n            case \"NSMicrophoneUsageDescription\":\r\n                microphonePermission = true;\r\n                break;\r\n            case \"NSLocationWhenInUseUsageDescription\":\r\n                locationPermission = true;\r\n                break;\r\n            case \"NSPhotoLibraryUsageDescription\":\r\n                photoLibraryPermission = true;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 触觉反馈\r\n    /// </summary>\r\n    /// <param name=\"feedbackType\">反馈类型</param>\r\n    public void TriggerHapticFeedback(string feedbackType = \"Light\")\r\n    {\r\n        if (enableHapticFeedback)\r\n        {\r\n            // 这里应该调用iOS触觉反馈API\r\n            Debug.Log($\"触觉反馈: {feedbackType}\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启用ARKit\r\n    /// </summary>\r\n    /// <param name=\"enabled\">是否启用</param>\r\n    public void SetARKitEnabled(bool enabled)\r\n    {\r\n        enableARKit = enabled;\r\n        \r\n        if (enabled)\r\n        {\r\n            // 初始化ARKit\r\n            Debug.Log(\"ARKit已启用\");\r\n        }\r\n        else\r\n        {\r\n            // 禁用ARKit\r\n            Debug.Log(\"ARKit已禁用\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启用CoreML\r\n    /// </summary>\r\n    /// <param name=\"enabled\">是否启用</param>\r\n    public void SetCoreMLEnabled(bool enabled)\r\n    {\r\n        enableCoreML = enabled;\r\n        \r\n        if (enabled)\r\n        {\r\n            // 初始化CoreML\r\n            Debug.Log(\"CoreML已启用\");\r\n        }\r\n        else\r\n        {\r\n            // 禁用CoreML\r\n            Debug.Log(\"CoreML已禁用\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 启用GameCenter\r\n    /// </summary>\r\n    /// <param name=\"enabled\">是否启用</param>\r\n    public void SetGameCenterEnabled(bool enabled)\r\n    {\r\n        enableGameCenter = enabled;\r\n        \r\n        if (enabled)\r\n        {\r\n            // 初始化GameCenter\r\n            Debug.Log(\"GameCenter已启用\");\r\n        }\r\n        else\r\n        {\r\n            // 禁用GameCenter\r\n            Debug.Log(\"GameCenter已禁用\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 设置视网膜显示\r\n    /// </summary>\r\n    /// <param name=\"enabled\">是否启用</param>\r\n    public void SetRetinaDisplayEnabled(bool enabled)\r\n    {\r\n        enableRetinaDisplay = enabled;\r\n        \r\n        if (enabled)\r\n        {\r\n            // 启用高分辨率渲染\r\n            QualitySettings.resolutionScalingFixedDPIFactor = 2.0f;\r\n            Debug.Log(\"视网膜显示已启用\");\r\n        }\r\n        else\r\n        {\r\n            // 禁用高分辨率渲染\r\n            QualitySettings.resolutionScalingFixedDPIFactor = 1.0f;\r\n            Debug.Log(\"视网膜显示已禁用\");\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取Apple系统信息\r\n    /// </summary>\r\n    public void GetAppleSystemInfo()\r\n    {\r\n        Debug.Log(\"=== Apple系统信息 ===\");\r\n        Debug.Log($\"设备型号: {deviceModel}\");\r\n        Debug.Log($\"设备名称: {deviceName}\");\r\n        Debug.Log($\"iOS版本: {iosVersion}\");\r\n        Debug.Log($\"设备类型: {(isIPhone ? \"iPhone\" : isIPad ? \"iPad\" : isIPod ? \"iPod\" : \"Unknown\")}\");\r\n        Debug.Log($\"Metal渲染: {useMetal}\");\r\n        Debug.Log($\"ProMotion: {enableProMotion}\");\r\n        Debug.Log($\"目标帧率: {targetFrameRate}\");\r\n        Debug.Log($\"多线程渲染: {enableMultithreadedRendering}\");\r\n        Debug.Log($\"ARKit: {enableARKit}\");\r\n        Debug.Log($\"CoreML: {enableCoreML}\");\r\n        Debug.Log($\"GameCenter: {enableGameCenter}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 获取权限信息\r\n    /// </summary>\r\n    public void GetPermissionInfo()\r\n    {\r\n        Debug.Log(\"=== 权限信息 ===\");\r\n        Debug.Log($\"相机权限: {cameraPermission}\");\r\n        Debug.Log($\"麦克风权限: {microphonePermission}\");\r\n        Debug.Log($\"位置权限: {locationPermission}\");\r\n        Debug.Log($\"照片库权限: {photoLibraryPermission}\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 测试Apple功能\r\n    /// </summary>\r\n    public void TestAppleFeatures()\r\n    {\r\n        Debug.Log(\"开始测试Apple功能\");\r\n        \r\n        // 测试触觉反馈\r\n        TriggerHapticFeedback(\"Medium\");\r\n        \r\n        // 测试权限请求\r\n        RequestPermission(\"NSCameraUsageDescription\");\r\n        \r\n        // 测试ARKit\r\n        SetARKitEnabled(true);\r\n        \r\n        // 测试ProMotion\r\n        if (enableProMotion)\r\n        {\r\n            SetupProMotion();\r\n        }\r\n        \r\n        Debug.Log(\"Apple功能测试完成\");\r\n    }\r\n\r\n    /// <summary>\r\n    /// 重置Apple设置\r\n    /// </summary>\r\n    public void ResetAppleSettings()\r\n    {\r\n        useMetal = true;\r\n        enableMetalValidation = false;\r\n        enableMetalDebugging = false;\r\n        metalSampleCount = 1;\r\n        \r\n        enableHapticFeedback = true;\r\n        enableARKit = false;\r\n        enableCoreML = false;\r\n        enableGameCenter = false;\r\n        \r\n        enableRetinaDisplay = true;\r\n        enableProMotion = false;\r\n        targetFrameRate = 60;\r\n        enableMultithreadedRendering = true;\r\n        \r\n        SetupAppleFeatures();\r\n        Debug.Log(\"Apple设置已重置\");\r\n    }\r\n\r\n    private void OnGUI()\r\n    {\r\n        GUILayout.BeginArea(new Rect(10, 10, 400, 700));\r\n        GUILayout.Label(\"Apple 平台功能演示\", UnityEditor.EditorStyles.boldLabel);\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"设备信息:\");\r\n        GUILayout.Label($\"设备: {deviceModel}\");\r\n        GUILayout.Label($\"名称: {deviceName}\");\r\n        GUILayout.Label($\"iOS版本: {iosVersion}\");\r\n        GUILayout.Label($\"类型: {(isIPhone ? \"iPhone\" : isIPad ? \"iPad\" : isIPod ? \"iPod\" : \"Unknown\")}\");\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"权限状态:\");\r\n        GUILayout.Label($\"相机: {(cameraPermission ? \"已授权\" : \"未授权\")}\");\r\n        GUILayout.Label($\"麦克风: {(microphonePermission ? \"已授权\" : \"未授权\")}\");\r\n        GUILayout.Label($\"位置: {(locationPermission ? \"已授权\" : \"未授权\")}\");\r\n        GUILayout.Label($\"照片库: {(photoLibraryPermission ? \"已授权\" : \"未授权\")}\");\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"Metal渲染:\");\r\n        \r\n        useMetal = GUILayout.Toggle(useMetal, \"使用Metal\");\r\n        enableMetalValidation = GUILayout.Toggle(enableMetalValidation, \"Metal验证\");\r\n        enableMetalDebugging = GUILayout.Toggle(enableMetalDebugging, \"Metal调试\");\r\n        metalSampleCount = int.TryParse(GUILayout.TextField(\"采样数\", metalSampleCount.ToString()), out var samples) ? samples : metalSampleCount;\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"iOS功能:\");\r\n        \r\n        enableHapticFeedback = GUILayout.Toggle(enableHapticFeedback, \"触觉反馈\");\r\n        enableARKit = GUILayout.Toggle(enableARKit, \"ARKit\");\r\n        enableCoreML = GUILayout.Toggle(enableCoreML, \"CoreML\");\r\n        enableGameCenter = GUILayout.Toggle(enableGameCenter, \"GameCenter\");\r\n        \r\n        GUILayout.Space(10);\r\n        GUILayout.Label(\"显示设置:\");\r\n        \r\n        enableRetinaDisplay = GUILayout.Toggle(enableRetinaDisplay, \"视网膜显示\");\r\n        enableProMotion = GUILayout.Toggle(enableProMotion, \"ProMotion\");\r\n        targetFrameRate = int.TryParse(GUILayout.TextField(\"目标帧率\", targetFrameRate.ToString()), out var fps) ? fps : targetFrameRate;\r\n        enableMultithreadedRendering = GUILayout.Toggle(enableMultithreadedRendering, \"多线程渲染\");\r\n        \r\n        GUILayout.Space(10);\r\n        \r\n        if (GUILayout.Button(\"请求相机权限\"))\r\n        {\r\n            RequestPermission(\"NSCameraUsageDescription\");\r\n        }\r\n        \r\n        if (GUILayout.Button(\"触觉反馈测试\"))\r\n        {\r\n            TriggerHapticFeedback(\"Heavy\");\r\n        }\r\n        \r\n        GUILayout.Space(10);\r\n        \r\n        if (GUILayout.Button(\"获取系统信息\"))\r\n        {\r\n            GetAppleSystemInfo();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"获取权限信息\"))\r\n        {\r\n            GetPermissionInfo();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"测试Apple功能\"))\r\n        {\r\n            TestAppleFeatures();\r\n        }\r\n        \r\n        if (GUILayout.Button(\"重置Apple设置\"))\r\n        {\r\n            ResetAppleSettings();\r\n        }\r\n        \r\n        GUILayout.EndArea();\r\n    }\r\n} "
        }
    ]
}