{
    "sourceFile": "Assets/UnityEditor/Chapter 4 EditorWindow/ConsoleGUIWindow.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1746878036295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746878048929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,62 +12,63 @@\n     private bool isExpand;\r\n     private int fps;\r\n     private float lastShowFPSTime;\r\n     private Color fpsColor = Color.white;\r\n-    //日志列表\r\n+    // 日志列表\r\n     private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\r\n \r\n-    //列表滚动视图\r\n+    // 列表滚动视图\r\n     private Vector2 listScroll;\r\n-    //详情滚动视图\r\n+    // 详情滚动视图\r\n     private Vector2 detailScroll;\r\n-    //普通日志数量\r\n+    // 普通日志数量\r\n     private int infoCount;\r\n-    //告警日志数量\r\n+    // 告警日志数量\r\n     private int warnCount;\r\n-    //错误日志数量\r\n+    // 错误日志数量\r\n     private int errorCount;\r\n-    //是否显示普通日志\r\n+    // 是否显示普通日志\r\n     [SerializeField] private bool showInfo = true;\r\n-    //是否显示告警日志\r\n+    // 是否显示告警日志\r\n     [SerializeField] private bool showWarn = true;\r\n-    //是否显示错误日志\r\n+    // 是否显示错误日志\r\n     [SerializeField] private bool showError = true;\r\n-    //当前选中的日志项\r\n+    // 当前选中的日志项\r\n     private ConsoleItem currentSelected;\r\n-    //是否显示日志时间\r\n+    // 是否显示日志时间\r\n     [SerializeField] private bool showTime = true;\r\n-    //最大缓存数量\r\n+    // 最大缓存数量\r\n     [SerializeField] private int maxCacheCount = 100;\r\n-    //检索内容\r\n+    // 检索内容\r\n     private string searchContent;\r\n \r\n     private void Start()\r\n     {\r\n         switch (workingType)\r\n         {\r\n-            case WorkingType.ALWAYS_OPEN: \r\n-                enabled = true; \r\n+            case WorkingType.ALWAYS_OPEN:\r\n+                enabled = true;\r\n                 break;\r\n             case WorkingType.ONLY_OPEN_WHEN_DEVELOPMENT_BUILD:\r\n                 enabled = Debug.isDebugBuild;\r\n                 break;\r\n             case WorkingType.ONLY_OPEN_IN_EDITOR:\r\n-                enabled = Application.isEditor; \r\n+                enabled = Application.isEditor;\r\n                 break;\r\n-            case WorkingType.ALWAYS_CLOSE: \r\n-                enabled = false; \r\n+            case WorkingType.ALWAYS_CLOSE:\r\n+                enabled = false;\r\n                 break;\r\n         }\r\n         if (!enabled) return;\r\n \r\n-        expandRect = new Rect(Screen.width * .7f, 0f, \r\n+        expandRect = new Rect(Screen.width * .7f, 0f,\r\n             Screen.width * .3f, Screen.height * .5f);\r\n         retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\r\n         dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n-        //事件注册\r\n+        // 事件注册\r\n         Application.logMessageReceived += OnLogMessageReceived;\r\n     }\r\n+\r\n     private void OnDestroy()\r\n     {\r\n         Application.logMessageReceived -= OnLogMessageReceived;\r\n     }\r\n@@ -91,31 +92,32 @@\n     {\r\n         if (isExpand)\r\n         {\r\n             expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\r\n-            //限制范围\r\n+            // 限制范围\r\n             expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\r\n             expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\r\n             dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n         }\r\n         else\r\n         {\r\n             retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\r\n-            //限制范围\r\n+            // 限制范围\r\n             retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\r\n             retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\r\n             dragableRect = new Rect(0, 0, 100f, 20f);\r\n         }\r\n-        //FPS计算\r\n+        // FPS计算\r\n         if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\r\n         {\r\n             fps = Mathf.RoundToInt(1f / Time.deltaTime);\r\n             lastShowFPSTime = Time.realtimeSinceStartup;\r\n             fpsColor = errorCount > 0 ? Color.red\r\n                 : warnCount > 0 ? Color.yellow : Color.white;\r\n         }\r\n     }\r\n-    //窗口为收起状态\r\n+\r\n+    // 窗口为收起状态\r\n     private void OnRetractGUI(int windowId)\r\n     {\r\n         GUI.DragWindow(dragableRect);\r\n         GUI.contentColor = fpsColor;\r\n@@ -123,9 +125,10 @@\n             GUILayout.Height(30f)))\r\n             isExpand = true;\r\n         GUI.contentColor = Color.white;\r\n     }\r\n-    //窗口为展开状态\r\n+\r\n+    // 窗口为展开状态\r\n     private void OnExpandGUI(int windowId)\r\n     {\r\n         GUI.DragWindow(dragableRect);\r\n         GUI.contentColor = fpsColor;\r\n@@ -135,25 +138,26 @@\n         OnTopGUI();\r\n         OnListGUI();\r\n         OnDetailGUI();\r\n     }\r\n+\r\n     private void OnTopGUI()\r\n     {\r\n         GUILayout.BeginHorizontal();\r\n-        //清空所有日志\r\n+        // 清空所有日志\r\n         if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\r\n         {\r\n             logs.Clear();\r\n             infoCount = 0;\r\n             warnCount = 0;\r\n             errorCount = 0;\r\n             currentSelected = null;\r\n         }\r\n-        //是否显示日志时间\r\n+        // 是否显示日志时间\r\n         showTime = GUILayout.Toggle(showTime, \"ShowTime\",\r\n             GUILayout.Width(80f));\r\n \r\n-        //检索输入框\r\n+        // 检索输入框\r\n         searchContent = GUILayout.TextField(searchContent,\r\n             GUILayout.ExpandWidth(true));\r\n \r\n         GUI.contentColor = showInfo ? Color.white : Color.grey;\r\n@@ -167,48 +171,50 @@\n             \"Error [{0}]\", errorCount), GUILayout.Width(65f));\r\n         GUI.contentColor = Color.white;\r\n         GUILayout.EndHorizontal();\r\n     }\r\n+\r\n     private void OnListGUI()\r\n     {\r\n         GUILayout.BeginVertical(\"Box\",\r\n             GUILayout.Height(Screen.height * .3f));\r\n-        //滚动视图\r\n+        // 滚动视图\r\n         listScroll = GUILayout.BeginScrollView(listScroll);\r\n         for (int i = logs.Count - 1; i >= 0; i--)\r\n         {\r\n             var temp = logs[i];\r\n-            //是否符合检索内容\r\n+            // 是否符合检索内容\r\n             if (!string.IsNullOrEmpty(searchContent) && !temp.message\r\n                 .ToLower().Contains(searchContent.ToLower())) continue;\r\n             bool show = false;\r\n             switch (temp.type)\r\n             {\r\n-                case LogType.Log: \r\n+                case LogType.Log:\r\n                     if (showInfo) show = true;\r\n                     break;\r\n                 case LogType.Warning:\r\n-                    if (showWarn) show = true; \r\n+                    if (showWarn) show = true;\r\n                     GUI.contentColor = Color.yellow;\r\n                     break;\r\n                 case LogType.Error:\r\n                 case LogType.Assert:\r\n-                case LogType.Exception: \r\n-                    if (showError) show = true; \r\n-                    GUI.contentColor = Color.red; \r\n+                case LogType.Exception:\r\n+                    if (showError) show = true;\r\n+                    GUI.contentColor = Color.red;\r\n                     break;\r\n             }\r\n             if (show)\r\n             {\r\n-                if (GUILayout.Toggle(currentSelected == temp, \r\n+                if (GUILayout.Toggle(currentSelected == temp,\r\n                     showTime ? temp.brief : temp.message))\r\n                     currentSelected = temp;\r\n             }\r\n             GUI.contentColor = Color.white;\r\n         }\r\n         GUILayout.EndScrollView();\r\n         GUILayout.EndVertical();\r\n     }\r\n+\r\n     private void OnDetailGUI()\r\n     {\r\n         GUILayout.BeginVertical(\"Box\", GUILayout.ExpandHeight(true));\r\n         detailScroll = GUILayout.BeginScrollView(detailScroll);\r\n@@ -218,9 +224,9 @@\n         }\r\n         GUILayout.EndScrollView();\r\n         GUILayout.FlexibleSpace();\r\n         GUI.enabled = currentSelected != null;\r\n-        //点击按钮时将日志详情复制到系统粘贴板中\r\n+        // 点击按钮时将日志详情复制到系统粘贴板中\r\n         if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\r\n         {\r\n             GUIUtility.systemCopyBuffer = currentSelected.detail;\r\n         }\r\n"
                },
                {
                    "date": 1746878087601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,14 +75,14 @@\n \r\n     private void OnLogMessageReceived(string condition,\r\n         string stackTrace, LogType logType)\r\n     {\r\n-        var item = new ConsoleItem(DateTime.Now,\r\n-            logType, condition, stackTrace);\r\n+        var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\r\n         if (logType == LogType.Log) infoCount++;\r\n         else if (logType == LogType.Warning) warnCount++;\r\n         else errorCount++;\r\n-        logs.Add(item);\r\n+            logs.Add(item);\r\n+            \r\n         if (logs.Count > maxCacheCount)\r\n         {\r\n             logs.RemoveAt(0);\r\n         }\r\n"
                },
                {
                    "date": 1746878285415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,10 @@\n         var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\r\n         if (logType == LogType.Log) infoCount++;\r\n         else if (logType == LogType.Warning) warnCount++;\r\n         else errorCount++;\r\n-            logs.Add(item);\r\n-            \r\n+        logs.Add(item);\r\n+\r\n         if (logs.Count > maxCacheCount)\r\n         {\r\n             logs.RemoveAt(0);\r\n         }\r\n"
                },
                {
                    "date": 1746878317167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,278 +1,278 @@\n-using System;\r\n-using UnityEngine;\r\n-using System.Collections.Generic;\r\n-\r\n-public class ConsoleGUIWindow : MonoBehaviour\r\n-{\r\n-    [SerializeField]\r\n-    private WorkingType workingType = WorkingType.ALWAYS_OPEN;\r\n-    private Rect expandRect;\r\n-    private Rect retractRect;\r\n-    private Rect dragableRect;\r\n-    private bool isExpand;\r\n-    private int fps;\r\n-    private float lastShowFPSTime;\r\n-    private Color fpsColor = Color.white;\r\n-    // 日志列表\r\n-    private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\r\n-\r\n-    // 列表滚动视图\r\n-    private Vector2 listScroll;\r\n-    // 详情滚动视图\r\n-    private Vector2 detailScroll;\r\n-    // 普通日志数量\r\n-    private int infoCount;\r\n-    // 告警日志数量\r\n-    private int warnCount;\r\n-    // 错误日志数量\r\n-    private int errorCount;\r\n-    // 是否显示普通日志\r\n-    [SerializeField] private bool showInfo = true;\r\n-    // 是否显示告警日志\r\n-    [SerializeField] private bool showWarn = true;\r\n-    // 是否显示错误日志\r\n-    [SerializeField] private bool showError = true;\r\n-    // 当前选中的日志项\r\n-    private ConsoleItem currentSelected;\r\n-    // 是否显示日志时间\r\n-    [SerializeField] private bool showTime = true;\r\n-    // 最大缓存数量\r\n-    [SerializeField] private int maxCacheCount = 100;\r\n-    // 检索内容\r\n-    private string searchContent;\r\n-\r\n-    private void Start()\r\n-    {\r\n-        switch (workingType)\r\n-        {\r\n-            case WorkingType.ALWAYS_OPEN:\r\n-                enabled = true;\r\n-                break;\r\n-            case WorkingType.ONLY_OPEN_WHEN_DEVELOPMENT_BUILD:\r\n-                enabled = Debug.isDebugBuild;\r\n-                break;\r\n-            case WorkingType.ONLY_OPEN_IN_EDITOR:\r\n-                enabled = Application.isEditor;\r\n-                break;\r\n-            case WorkingType.ALWAYS_CLOSE:\r\n-                enabled = false;\r\n-                break;\r\n-        }\r\n-        if (!enabled) return;\r\n-\r\n-        expandRect = new Rect(Screen.width * .7f, 0f,\r\n-            Screen.width * .3f, Screen.height * .5f);\r\n-        retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\r\n-        dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n-        // 事件注册\r\n-        Application.logMessageReceived += OnLogMessageReceived;\r\n-    }\r\n-\r\n-    private void OnDestroy()\r\n-    {\r\n-        Application.logMessageReceived -= OnLogMessageReceived;\r\n-    }\r\n-\r\n-    private void OnLogMessageReceived(string condition,\r\n-        string stackTrace, LogType logType)\r\n-    {\r\n-        var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\r\n-        if (logType == LogType.Log) infoCount++;\r\n-        else if (logType == LogType.Warning) warnCount++;\r\n-        else errorCount++;\r\n-        logs.Add(item);\r\n-\r\n-        if (logs.Count > maxCacheCount)\r\n-        {\r\n-            logs.RemoveAt(0);\r\n-        }\r\n-    }\r\n-\r\n-    private void OnGUI()\r\n-    {\r\n-        if (isExpand)\r\n-        {\r\n-            expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\r\n-            // 限制范围\r\n-            expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\r\n-            expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\r\n-            dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n-        }\r\n-        else\r\n-        {\r\n-            retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\r\n-            // 限制范围\r\n-            retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\r\n-            retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\r\n-            dragableRect = new Rect(0, 0, 100f, 20f);\r\n-        }\r\n-        // FPS计算\r\n-        if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\r\n-        {\r\n-            fps = Mathf.RoundToInt(1f / Time.deltaTime);\r\n-            lastShowFPSTime = Time.realtimeSinceStartup;\r\n-            fpsColor = errorCount > 0 ? Color.red\r\n-                : warnCount > 0 ? Color.yellow : Color.white;\r\n-        }\r\n-    }\r\n-\r\n-    // 窗口为收起状态\r\n-    private void OnRetractGUI(int windowId)\r\n-    {\r\n-        GUI.DragWindow(dragableRect);\r\n-        GUI.contentColor = fpsColor;\r\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\r\n-            GUILayout.Height(30f)))\r\n-            isExpand = true;\r\n-        GUI.contentColor = Color.white;\r\n-    }\r\n-\r\n-    // 窗口为展开状态\r\n-    private void OnExpandGUI(int windowId)\r\n-    {\r\n-        GUI.DragWindow(dragableRect);\r\n-        GUI.contentColor = fpsColor;\r\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\r\n-            GUILayout.Height(20f)))\r\n-            isExpand = false;\r\n-        OnTopGUI();\r\n-        OnListGUI();\r\n-        OnDetailGUI();\r\n-    }\r\n-\r\n-    private void OnTopGUI()\r\n-    {\r\n-        GUILayout.BeginHorizontal();\r\n-        // 清空所有日志\r\n-        if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\r\n-        {\r\n-            logs.Clear();\r\n-            infoCount = 0;\r\n-            warnCount = 0;\r\n-            errorCount = 0;\r\n-            currentSelected = null;\r\n-        }\r\n-        // 是否显示日志时间\r\n-        showTime = GUILayout.Toggle(showTime, \"ShowTime\",\r\n-            GUILayout.Width(80f));\r\n-\r\n-        // 检索输入框\r\n-        searchContent = GUILayout.TextField(searchContent,\r\n-            GUILayout.ExpandWidth(true));\r\n-\r\n-        GUI.contentColor = showInfo ? Color.white : Color.grey;\r\n-        showInfo = GUILayout.Toggle(showInfo, string.Format(\r\n-            \"Info [{0}]\", infoCount), GUILayout.Width(60f));\r\n-        GUI.contentColor = showWarn ? Color.white : Color.grey;\r\n-        showWarn = GUILayout.Toggle(showWarn, string.Format(\r\n-            \"Warn [{0}]\", warnCount), GUILayout.Width(65f));\r\n-        GUI.contentColor = showError ? Color.white : Color.grey;\r\n-        showError = GUILayout.Toggle(showError, string.Format(\r\n-            \"Error [{0}]\", errorCount), GUILayout.Width(65f));\r\n-        GUI.contentColor = Color.white;\r\n-        GUILayout.EndHorizontal();\r\n-    }\r\n-\r\n-    private void OnListGUI()\r\n-    {\r\n-        GUILayout.BeginVertical(\"Box\",\r\n-            GUILayout.Height(Screen.height * .3f));\r\n-        // 滚动视图\r\n-        listScroll = GUILayout.BeginScrollView(listScroll);\r\n-        for (int i = logs.Count - 1; i >= 0; i--)\r\n-        {\r\n-            var temp = logs[i];\r\n-            // 是否符合检索内容\r\n-            if (!string.IsNullOrEmpty(searchContent) && !temp.message\r\n-                .ToLower().Contains(searchContent.ToLower())) continue;\r\n-            bool show = false;\r\n-            switch (temp.type)\r\n-            {\r\n-                case LogType.Log:\r\n-                    if (showInfo) show = true;\r\n-                    break;\r\n-                case LogType.Warning:\r\n-                    if (showWarn) show = true;\r\n-                    GUI.contentColor = Color.yellow;\r\n-                    break;\r\n-                case LogType.Error:\r\n-                case LogType.Assert:\r\n-                case LogType.Exception:\r\n-                    if (showError) show = true;\r\n-                    GUI.contentColor = Color.red;\r\n-                    break;\r\n-            }\r\n-            if (show)\r\n-            {\r\n-                if (GUILayout.Toggle(currentSelected == temp,\r\n-                    showTime ? temp.brief : temp.message))\r\n-                    currentSelected = temp;\r\n-            }\r\n-            GUI.contentColor = Color.white;\r\n-        }\r\n-        GUILayout.EndScrollView();\r\n-        GUILayout.EndVertical();\r\n-    }\r\n-\r\n-    private void OnDetailGUI()\r\n-    {\r\n-        GUILayout.BeginVertical(\"Box\", GUILayout.ExpandHeight(true));\r\n-        detailScroll = GUILayout.BeginScrollView(detailScroll);\r\n-        if (currentSelected != null)\r\n-        {\r\n-            GUILayout.Label(currentSelected.detail);\r\n-        }\r\n-        GUILayout.EndScrollView();\r\n-        GUILayout.FlexibleSpace();\r\n-        GUI.enabled = currentSelected != null;\r\n-        // 点击按钮时将日志详情复制到系统粘贴板中\r\n-        if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\r\n-        {\r\n-            GUIUtility.systemCopyBuffer = currentSelected.detail;\r\n-        }\r\n-        GUILayout.EndVertical();\r\n-    }\r\n-}\r\n-\r\n-public enum WorkingType\r\n-{\r\n-    /// <summary>\r\n-    /// 始终打开\r\n-    /// </summary>\r\n-    ALWAYS_OPEN,\r\n-    /// <summary>\r\n-    /// 仅在Development Build模式下打开\r\n-    /// </summary>\r\n-    ONLY_OPEN_WHEN_DEVELOPMENT_BUILD,\r\n-    /// <summary>\r\n-    /// 仅在Editor中打开\r\n-    /// </summary>\r\n-    ONLY_OPEN_IN_EDITOR,\r\n-    /// <summary>\r\n-    /// 始终关闭\r\n-    /// </summary>\r\n-    ALWAYS_CLOSE\r\n-}\r\n-\r\n-public class ConsoleItem\r\n-{\r\n-    public LogType type;\r\n-    public DateTime time;\r\n-    public string message;\r\n-    public string stackTrace;\r\n-    public string brief;\r\n-    public string detail;\r\n-\r\n-    public ConsoleItem(DateTime time, LogType type,\r\n-        string message, string stackTrace)\r\n-    {\r\n-        this.type = type;\r\n-        this.time = time;\r\n-        this.message = message;\r\n-        this.stackTrace = stackTrace;\r\n-        brief = string.Format(\"[{0}] {1}\",\r\n-            time, message);\r\n-        detail = string.Format(\"[{0}] {1}\\r\\n{2}\",\r\n-            time, message, stackTrace);\r\n-    }\r\n+using System;\n+using UnityEngine;\n+using System.Collections.Generic;\n+\n+public class ConsoleGUIWindow : MonoBehaviour\n+{\n+    [SerializeField]\n+    private WorkingType workingType = WorkingType.ALWAYS_OPEN;\n+    private Rect expandRect;\n+    private Rect retractRect;\n+    private Rect dragableRect;\n+    private bool isExpand;\n+    private int fps;\n+    private float lastShowFPSTime;\n+    private Color fpsColor = Color.white;\n+    // 日志列表\n+    private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\n+\n+    // 列表滚动视图\n+    private Vector2 listScroll;\n+    // 详情滚动视图\n+    private Vector2 detailScroll;\n+    // 普通日志数量\n+    private int infoCount;\n+    // 告警日志数量\n+    private int warnCount;\n+    // 错误日志数量\n+    private int errorCount;\n+    // 是否显示普通日志\n+    [SerializeField] private bool showInfo = true;\n+    // 是否显示告警日志\n+    [SerializeField] private bool showWarn = true;\n+    // 是否显示错误日志\n+    [SerializeField] private bool showError = true;\n+    // 当前选中的日志项\n+    private ConsoleItem currentSelected;\n+    // 是否显示日志时间\n+    [SerializeField] private bool showTime = true;\n+    // 最大缓存数量\n+    [SerializeField] private int maxCacheCount = 100;\n+    // 检索内容\n+    private string searchContent;\n+\n+    private void Start()\n+    {\n+        switch (workingType)\n+        {\n+            case WorkingType.ALWAYS_OPEN:\n+                enabled = true;\n+                break;\n+            case WorkingType.ONLY_OPEN_WHEN_DEVELOPMENT_BUILD:\n+                enabled = Debug.isDebugBuild;\n+                break;\n+            case WorkingType.ONLY_OPEN_IN_EDITOR:\n+                enabled = Application.isEditor;\n+                break;\n+            case WorkingType.ALWAYS_CLOSE:\n+                enabled = false;\n+                break;\n+        }\n+        if (!enabled) return;\n+\n+        expandRect = new Rect(Screen.width * .7f, 0f,\n+            Screen.width * .3f, Screen.height * .5f);\n+        retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\n+        dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n+        // 事件注册\n+        Application.logMessageReceived += OnLogMessageReceived;\n+    }\n+\n+    private void OnDestroy()\n+    {\n+        Application.logMessageReceived -= OnLogMessageReceived;\n+    }\n+\n+    private void OnLogMessageReceived(string condition,\n+        string stackTrace, LogType logType)\n+    {\n+        var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\n+        if (logType == LogType.Log) infoCount++;\n+        else if (logType == LogType.Warning) warnCount++;\n+        else errorCount++;\n+            logs.Add(item);\n+            \n+        if (logs.Count > maxCacheCount)\n+        {\n+            logs.RemoveAt(0);\n+        }\n+    }\n+\n+    private void OnGUI()\n+    {\n+        if (isExpand)\n+        {\n+            expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\n+            // 限制范围\n+            expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\n+            expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\n+            dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n+        }\n+        else\n+        {\n+            retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\n+            // 限制范围\n+            retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\n+            retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\n+            dragableRect = new Rect(0, 0, 100f, 20f);\n+        }\n+        // FPS计算\n+        if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\n+        {\n+            fps = Mathf.RoundToInt(1f / Time.deltaTime);\n+            lastShowFPSTime = Time.realtimeSinceStartup;\n+            fpsColor = errorCount > 0 ? Color.red\n+                : warnCount > 0 ? Color.yellow : Color.white;\n+        }\n+    }\n+\n+    // 窗口为收起状态\n+    private void OnRetractGUI(int windowId)\n+    {\n+        GUI.DragWindow(dragableRect);\n+        GUI.contentColor = fpsColor;\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n+            GUILayout.Height(30f)))\n+            isExpand = true;\n+        GUI.contentColor = Color.white;\n+    }\n+\n+    // 窗口为展开状态\n+    private void OnExpandGUI(int windowId)\n+    {\n+        GUI.DragWindow(dragableRect);\n+        GUI.contentColor = fpsColor;\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n+            GUILayout.Height(20f)))\n+            isExpand = false;\n+        OnTopGUI();\n+        OnListGUI();\n+        OnDetailGUI();\n+    }\n+\n+    private void OnTopGUI()\n+    {\n+        GUILayout.BeginHorizontal();\n+        // 清空所有日志\n+        if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\n+        {\n+            logs.Clear();\n+            infoCount = 0;\n+            warnCount = 0;\n+            errorCount = 0;\n+            currentSelected = null;\n+        }\n+        // 是否显示日志时间\n+        showTime = GUILayout.Toggle(showTime, \"ShowTime\",\n+            GUILayout.Width(80f));\n+\n+        // 检索输入框\n+        searchContent = GUILayout.TextField(searchContent,\n+            GUILayout.ExpandWidth(true));\n+\n+        GUI.contentColor = showInfo ? Color.white : Color.grey;\n+        showInfo = GUILayout.Toggle(showInfo, string.Format(\n+            \"Info [{0}]\", infoCount), GUILayout.Width(60f));\n+        GUI.contentColor = showWarn ? Color.white : Color.grey;\n+        showWarn = GUILayout.Toggle(showWarn, string.Format(\n+            \"Warn [{0}]\", warnCount), GUILayout.Width(65f));\n+        GUI.contentColor = showError ? Color.white : Color.grey;\n+        showError = GUILayout.Toggle(showError, string.Format(\n+            \"Error [{0}]\", errorCount), GUILayout.Width(65f));\n+        GUI.contentColor = Color.white;\n+        GUILayout.EndHorizontal();\n+    }\n+\n+    private void OnListGUI()\n+    {\n+        GUILayout.BeginVertical(\"Box\",\n+            GUILayout.Height(Screen.height * .3f));\n+        // 滚动视图\n+        listScroll = GUILayout.BeginScrollView(listScroll);\n+        for (int i = logs.Count - 1; i >= 0; i--)\n+        {\n+            var temp = logs[i];\n+            // 是否符合检索内容\n+            if (!string.IsNullOrEmpty(searchContent) && !temp.message\n+                .ToLower().Contains(searchContent.ToLower())) continue;\n+            bool show = false;\n+            switch (temp.type)\n+            {\n+                case LogType.Log:\n+                    if (showInfo) show = true;\n+                    break;\n+                case LogType.Warning:\n+                    if (showWarn) show = true;\n+                    GUI.contentColor = Color.yellow;\n+                    break;\n+                case LogType.Error:\n+                case LogType.Assert:\n+                case LogType.Exception:\n+                    if (showError) show = true;\n+                    GUI.contentColor = Color.red;\n+                    break;\n+            }\n+            if (show)\n+            {\n+                if (GUILayout.Toggle(currentSelected == temp,\n+                    showTime ? temp.brief : temp.message))\n+                    currentSelected = temp;\n+            }\n+            GUI.contentColor = Color.white;\n+        }\n+        GUILayout.EndScrollView();\n+        GUILayout.EndVertical();\n+    }\n+\n+    private void OnDetailGUI()\n+    {\n+        GUILayout.BeginVertical(\"Box\", GUILayout.ExpandHeight(true));\n+        detailScroll = GUILayout.BeginScrollView(detailScroll);\n+        if (currentSelected != null)\n+        {\n+            GUILayout.Label(currentSelected.detail);\n+        }\n+        GUILayout.EndScrollView();\n+        GUILayout.FlexibleSpace();\n+        GUI.enabled = currentSelected != null;\n+        // 点击按钮时将日志详情复制到系统粘贴板中\n+        if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\n+        {\n+            GUIUtility.systemCopyBuffer = currentSelected.detail;\n+        }\n+        GUILayout.EndVertical();\n+    }\n+}\n+\n+public enum WorkingType\n+{\n+    /// <summary>\n+    /// 始终打开\n+    /// </summary>\n+    ALWAYS_OPEN,\n+    /// <summary>\n+    /// 仅在Development Build模式下打开\n+    /// </summary>\n+    ONLY_OPEN_WHEN_DEVELOPMENT_BUILD,\n+    /// <summary>\n+    /// 仅在Editor中打开\n+    /// </summary>\n+    ONLY_OPEN_IN_EDITOR,\n+    /// <summary>\n+    /// 始终关闭\n+    /// </summary>\n+    ALWAYS_CLOSE\n+}\n+\n+public class ConsoleItem\n+{\n+    public LogType type;\n+    public DateTime time;\n+    public string message;\n+    public string stackTrace;\n+    public string brief;\n+    public string detail;\n+\n+    public ConsoleItem(DateTime time, LogType type,\n+        string message, string stackTrace)\n+    {\n+        this.type = type;\n+        this.time = time;\n+        this.message = message;\n+        this.stackTrace = stackTrace;\n+        brief = string.Format(\"[{0}] {1}\",\n+            time, message);\n+        detail = string.Format(\"[{0}] {1}\\r\\n{2}\",\n+            time, message, stackTrace);\n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746878411375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,34 +12,20 @@\n     private bool isExpand;\n     private int fps;\n     private float lastShowFPSTime;\n     private Color fpsColor = Color.white;\n-    // 日志列表\n     private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\n-\n-    // 列表滚动视图\n     private Vector2 listScroll;\n-    // 详情滚动视图\n     private Vector2 detailScroll;\n-    // 普通日志数量\n     private int infoCount;\n-    // 告警日志数量\n     private int warnCount;\n-    // 错误日志数量\n     private int errorCount;\n-    // 是否显示普通日志\n     [SerializeField] private bool showInfo = true;\n-    // 是否显示告警日志\n     [SerializeField] private bool showWarn = true;\n-    // 是否显示错误日志\n     [SerializeField] private bool showError = true;\n-    // 当前选中的日志项\n     private ConsoleItem currentSelected;\n-    // 是否显示日志时间\n     [SerializeField] private bool showTime = true;\n-    // 最大缓存数量\n     [SerializeField] private int maxCacheCount = 100;\n-    // 检索内容\n     private string searchContent;\n \n     private void Start()\n     {\n@@ -59,30 +45,27 @@\n                 break;\n         }\n         if (!enabled) return;\n \n-        expandRect = new Rect(Screen.width * .7f, 0f,\n-            Screen.width * .3f, Screen.height * .5f);\n+        expandRect = new Rect(Screen.width * .7f, 0f, Screen.width * .3f, Screen.height * .5f);\n         retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\n         dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n-        // 事件注册\n         Application.logMessageReceived += OnLogMessageReceived;\n     }\n \n     private void OnDestroy()\n     {\n         Application.logMessageReceived -= OnLogMessageReceived;\n     }\n \n-    private void OnLogMessageReceived(string condition,\n-        string stackTrace, LogType logType)\n+    private void OnLogMessageReceived(string condition, string stackTrace, LogType logType)\n     {\n         var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\n         if (logType == LogType.Log) infoCount++;\n         else if (logType == LogType.Warning) warnCount++;\n         else errorCount++;\n-            logs.Add(item);\n-            \n+        \n+        logs.Add(item);\n         if (logs.Count > maxCacheCount)\n         {\n             logs.RemoveAt(0);\n         }\n@@ -92,49 +75,42 @@\n     {\n         if (isExpand)\n         {\n             expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\n-            // 限制范围\n             expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\n             expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\n             dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n         }\n         else\n         {\n             retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\n-            // 限制范围\n             retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\n             retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\n             dragableRect = new Rect(0, 0, 100f, 20f);\n         }\n-        // FPS计算\n+\n         if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\n         {\n             fps = Mathf.RoundToInt(1f / Time.deltaTime);\n             lastShowFPSTime = Time.realtimeSinceStartup;\n-            fpsColor = errorCount > 0 ? Color.red\n-                : warnCount > 0 ? Color.yellow : Color.white;\n+            fpsColor = errorCount > 0 ? Color.red : warnCount > 0 ? Color.yellow : Color.white;\n         }\n     }\n \n-    // 窗口为收起状态\n     private void OnRetractGUI(int windowId)\n     {\n         GUI.DragWindow(dragableRect);\n         GUI.contentColor = fpsColor;\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n-            GUILayout.Height(30f)))\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps), GUILayout.Height(30f)))\n             isExpand = true;\n         GUI.contentColor = Color.white;\n     }\n \n-    // 窗口为展开状态\n     private void OnExpandGUI(int windowId)\n     {\n         GUI.DragWindow(dragableRect);\n         GUI.contentColor = fpsColor;\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n-            GUILayout.Height(20f)))\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps), GUILayout.Height(20f)))\n             isExpand = false;\n         OnTopGUI();\n         OnListGUI();\n         OnDetailGUI();\n@@ -142,50 +118,38 @@\n \n     private void OnTopGUI()\n     {\n         GUILayout.BeginHorizontal();\n-        // 清空所有日志\n         if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\n         {\n             logs.Clear();\n             infoCount = 0;\n             warnCount = 0;\n             errorCount = 0;\n             currentSelected = null;\n         }\n-        // 是否显示日志时间\n-        showTime = GUILayout.Toggle(showTime, \"ShowTime\",\n-            GUILayout.Width(80f));\n+        showTime = GUILayout.Toggle(showTime, \"ShowTime\", GUILayout.Width(80f));\n+        searchContent = GUILayout.TextField(searchContent, GUILayout.ExpandWidth(true));\n \n-        // 检索输入框\n-        searchContent = GUILayout.TextField(searchContent,\n-            GUILayout.ExpandWidth(true));\n-\n         GUI.contentColor = showInfo ? Color.white : Color.grey;\n-        showInfo = GUILayout.Toggle(showInfo, string.Format(\n-            \"Info [{0}]\", infoCount), GUILayout.Width(60f));\n+        showInfo = GUILayout.Toggle(showInfo, string.Format(\"Info [{0}]\", infoCount), GUILayout.Width(60f));\n         GUI.contentColor = showWarn ? Color.white : Color.grey;\n-        showWarn = GUILayout.Toggle(showWarn, string.Format(\n-            \"Warn [{0}]\", warnCount), GUILayout.Width(65f));\n+        showWarn = GUILayout.Toggle(showWarn, string.Format(\"Warn [{0}]\", warnCount), GUILayout.Width(65f));\n         GUI.contentColor = showError ? Color.white : Color.grey;\n-        showError = GUILayout.Toggle(showError, string.Format(\n-            \"Error [{0}]\", errorCount), GUILayout.Width(65f));\n+        showError = GUILayout.Toggle(showError, string.Format(\"Error [{0}]\", errorCount), GUILayout.Width(65f));\n         GUI.contentColor = Color.white;\n         GUILayout.EndHorizontal();\n     }\n \n     private void OnListGUI()\n     {\n-        GUILayout.BeginVertical(\"Box\",\n-            GUILayout.Height(Screen.height * .3f));\n-        // 滚动视图\n+        GUILayout.BeginVertical(\"Box\", GUILayout.Height(Screen.height * .3f));\n         listScroll = GUILayout.BeginScrollView(listScroll);\n         for (int i = logs.Count - 1; i >= 0; i--)\n         {\n             var temp = logs[i];\n-            // 是否符合检索内容\n-            if (!string.IsNullOrEmpty(searchContent) && !temp.message\n-                .ToLower().Contains(searchContent.ToLower())) continue;\n+            if (!string.IsNullOrEmpty(searchContent) && !temp.message.ToLower().Contains(searchContent.ToLower())) continue;\n+\n             bool show = false;\n             switch (temp.type)\n             {\n                 case LogType.Log:\n@@ -203,10 +167,9 @@\n                     break;\n             }\n             if (show)\n             {\n-                if (GUILayout.Toggle(currentSelected == temp,\n-                    showTime ? temp.brief : temp.message))\n+                if (GUILayout.Toggle(currentSelected == temp, showTime ? temp.brief : temp.message))\n                     currentSelected = temp;\n             }\n             GUI.contentColor = Color.white;\n         }\n@@ -224,9 +187,8 @@\n         }\n         GUILayout.EndScrollView();\n         GUILayout.FlexibleSpace();\n         GUI.enabled = currentSelected != null;\n-        // 点击按钮时将日志详情复制到系统粘贴板中\n         if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\n         {\n             GUIUtility.systemCopyBuffer = currentSelected.detail;\n         }\n@@ -235,23 +197,11 @@\n }\n \n public enum WorkingType\n {\n-    /// <summary>\n-    /// 始终打开\n-    /// </summary>\n     ALWAYS_OPEN,\n-    /// <summary>\n-    /// 仅在Development Build模式下打开\n-    /// </summary>\n     ONLY_OPEN_WHEN_DEVELOPMENT_BUILD,\n-    /// <summary>\n-    /// 仅在Editor中打开\n-    /// </summary>\n     ONLY_OPEN_IN_EDITOR,\n-    /// <summary>\n-    /// 始终关闭\n-    /// </summary>\n     ALWAYS_CLOSE\n }\n \n public class ConsoleItem\n@@ -262,17 +212,14 @@\n     public string stackTrace;\n     public string brief;\n     public string detail;\n \n-    public ConsoleItem(DateTime time, LogType type,\n-        string message, string stackTrace)\n+    public ConsoleItem(DateTime time, LogType type, string message, string stackTrace)\n     {\n         this.type = type;\n         this.time = time;\n         this.message = message;\n         this.stackTrace = stackTrace;\n-        brief = string.Format(\"[{0}] {1}\",\n-            time, message);\n-        detail = string.Format(\"[{0}] {1}\\r\\n{2}\",\n-            time, message, stackTrace);\n+        brief = string.Format(\"[{0}] {1}\", time, message);\n+        detail = string.Format(\"[{0}] {1}\\r\\n{2}\", time, message, stackTrace);\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746878436121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,34 @@\n     private bool isExpand;\n     private int fps;\n     private float lastShowFPSTime;\n     private Color fpsColor = Color.white;\n+    // 日志列表\n     private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\n+\n+    // 列表滚动视图\n     private Vector2 listScroll;\n+    // 详情滚动视图\n     private Vector2 detailScroll;\n+    // 普通日志数量\n     private int infoCount;\n+    // 告警日志数量\n     private int warnCount;\n+    // 错误日志数量\n     private int errorCount;\n+    // 是否显示普通日志\n     [SerializeField] private bool showInfo = true;\n+    // 是否显示告警日志\n     [SerializeField] private bool showWarn = true;\n+    // 是否显示错误日志\n     [SerializeField] private bool showError = true;\n+    // 当前选中的日志项\n     private ConsoleItem currentSelected;\n+    // 是否显示日志时间\n     [SerializeField] private bool showTime = true;\n+    // 最大缓存数量\n     [SerializeField] private int maxCacheCount = 100;\n+    // 检索内容\n     private string searchContent;\n \n     private void Start()\n     {\n@@ -45,27 +59,30 @@\n                 break;\n         }\n         if (!enabled) return;\n \n-        expandRect = new Rect(Screen.width * .7f, 0f, Screen.width * .3f, Screen.height * .5f);\n+        expandRect = new Rect(Screen.width * .7f, 0f,\n+            Screen.width * .3f, Screen.height * .5f);\n         retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\n         dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n+        // 事件注册\n         Application.logMessageReceived += OnLogMessageReceived;\n     }\n \n     private void OnDestroy()\n     {\n         Application.logMessageReceived -= OnLogMessageReceived;\n     }\n \n-    private void OnLogMessageReceived(string condition, string stackTrace, LogType logType)\n+    private void OnLogMessageReceived(string condition,\n+        string stackTrace, LogType logType)\n     {\n         var item = new ConsoleItem(DateTime.Now, logType, condition, stackTrace);\n         if (logType == LogType.Log) infoCount++;\n         else if (logType == LogType.Warning) warnCount++;\n         else errorCount++;\n-        \n-        logs.Add(item);\n+            logs.Add(item);\n+            \n         if (logs.Count > maxCacheCount)\n         {\n             logs.RemoveAt(0);\n         }\n@@ -75,42 +92,49 @@\n     {\n         if (isExpand)\n         {\n             expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\n+            // 限制范围\n             expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\n             expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\n             dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\n         }\n         else\n         {\n             retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\n+            // 限制范围\n             retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\n             retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\n             dragableRect = new Rect(0, 0, 100f, 20f);\n         }\n-\n+        // FPS计算\n         if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\n         {\n             fps = Mathf.RoundToInt(1f / Time.deltaTime);\n             lastShowFPSTime = Time.realtimeSinceStartup;\n-            fpsColor = errorCount > 0 ? Color.red : warnCount > 0 ? Color.yellow : Color.white;\n+            fpsColor = errorCount > 0 ? Color.red\n+                : warnCount > 0 ? Color.yellow : Color.white;\n         }\n     }\n \n+    // 窗口为收起状态\n     private void OnRetractGUI(int windowId)\n     {\n         GUI.DragWindow(dragableRect);\n         GUI.contentColor = fpsColor;\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps), GUILayout.Height(30f)))\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n+            GUILayout.Height(30f)))\n             isExpand = true;\n         GUI.contentColor = Color.white;\n     }\n \n+    // 窗口为展开状态\n     private void OnExpandGUI(int windowId)\n     {\n         GUI.DragWindow(dragableRect);\n         GUI.contentColor = fpsColor;\n-        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps), GUILayout.Height(20f)))\n+        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\n+            GUILayout.Height(20f)))\n             isExpand = false;\n         OnTopGUI();\n         OnListGUI();\n         OnDetailGUI();\n@@ -118,38 +142,50 @@\n \n     private void OnTopGUI()\n     {\n         GUILayout.BeginHorizontal();\n+        // 清空所有日志\n         if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\n         {\n             logs.Clear();\n             infoCount = 0;\n             warnCount = 0;\n             errorCount = 0;\n             currentSelected = null;\n         }\n-        showTime = GUILayout.Toggle(showTime, \"ShowTime\", GUILayout.Width(80f));\n-        searchContent = GUILayout.TextField(searchContent, GUILayout.ExpandWidth(true));\n+        // 是否显示日志时间\n+        showTime = GUILayout.Toggle(showTime, \"ShowTime\",\n+            GUILayout.Width(80f));\n \n+        // 检索输入框\n+        searchContent = GUILayout.TextField(searchContent,\n+            GUILayout.ExpandWidth(true));\n+\n         GUI.contentColor = showInfo ? Color.white : Color.grey;\n-        showInfo = GUILayout.Toggle(showInfo, string.Format(\"Info [{0}]\", infoCount), GUILayout.Width(60f));\n+        showInfo = GUILayout.Toggle(showInfo, string.Format(\n+            \"Info [{0}]\", infoCount), GUILayout.Width(60f));\n         GUI.contentColor = showWarn ? Color.white : Color.grey;\n-        showWarn = GUILayout.Toggle(showWarn, string.Format(\"Warn [{0}]\", warnCount), GUILayout.Width(65f));\n+        showWarn = GUILayout.Toggle(showWarn, string.Format(\n+            \"Warn [{0}]\", warnCount), GUILayout.Width(65f));\n         GUI.contentColor = showError ? Color.white : Color.grey;\n-        showError = GUILayout.Toggle(showError, string.Format(\"Error [{0}]\", errorCount), GUILayout.Width(65f));\n+        showError = GUILayout.Toggle(showError, string.Format(\n+            \"Error [{0}]\", errorCount), GUILayout.Width(65f));\n         GUI.contentColor = Color.white;\n         GUILayout.EndHorizontal();\n     }\n \n     private void OnListGUI()\n     {\n-        GUILayout.BeginVertical(\"Box\", GUILayout.Height(Screen.height * .3f));\n+        GUILayout.BeginVertical(\"Box\",\n+            GUILayout.Height(Screen.height * .3f));\n+        // 滚动视图\n         listScroll = GUILayout.BeginScrollView(listScroll);\n         for (int i = logs.Count - 1; i >= 0; i--)\n         {\n             var temp = logs[i];\n-            if (!string.IsNullOrEmpty(searchContent) && !temp.message.ToLower().Contains(searchContent.ToLower())) continue;\n-\n+            // 是否符合检索内容\n+            if (!string.IsNullOrEmpty(searchContent) && !temp.message\n+                .ToLower().Contains(searchContent.ToLower())) continue;\n             bool show = false;\n             switch (temp.type)\n             {\n                 case LogType.Log:\n@@ -167,9 +203,10 @@\n                     break;\n             }\n             if (show)\n             {\n-                if (GUILayout.Toggle(currentSelected == temp, showTime ? temp.brief : temp.message))\n+                if (GUILayout.Toggle(currentSelected == temp,\n+                    showTime ? temp.brief : temp.message))\n                     currentSelected = temp;\n             }\n             GUI.contentColor = Color.white;\n         }\n@@ -187,8 +224,9 @@\n         }\n         GUILayout.EndScrollView();\n         GUILayout.FlexibleSpace();\n         GUI.enabled = currentSelected != null;\n+        // 点击按钮时将日志详情复制到系统粘贴板中\n         if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\n         {\n             GUIUtility.systemCopyBuffer = currentSelected.detail;\n         }\n@@ -197,11 +235,23 @@\n }\n \n public enum WorkingType\n {\n+    /// <summary>\n+    /// 始终打开\n+    /// </summary>\n     ALWAYS_OPEN,\n+    /// <summary>\n+    /// 仅在Development Build模式下打开\n+    /// </summary>\n     ONLY_OPEN_WHEN_DEVELOPMENT_BUILD,\n+    /// <summary>\n+    /// 仅在Editor中打开\n+    /// </summary>\n     ONLY_OPEN_IN_EDITOR,\n+    /// <summary>\n+    /// 始终关闭\n+    /// </summary>\n     ALWAYS_CLOSE\n }\n \n public class ConsoleItem\n@@ -212,14 +262,17 @@\n     public string stackTrace;\n     public string brief;\n     public string detail;\n \n-    public ConsoleItem(DateTime time, LogType type, string message, string stackTrace)\n+    public ConsoleItem(DateTime time, LogType type,\n+        string message, string stackTrace)\n     {\n         this.type = type;\n         this.time = time;\n         this.message = message;\n         this.stackTrace = stackTrace;\n-        brief = string.Format(\"[{0}] {1}\", time, message);\n-        detail = string.Format(\"[{0}] {1}\\r\\n{2}\", time, message, stackTrace);\n+        brief = string.Format(\"[{0}] {1}\",\n+            time, message);\n+        detail = string.Format(\"[{0}] {1}\\r\\n{2}\",\n+            time, message, stackTrace);\n     }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1746878036295,
            "name": "Commit-0",
            "content": "using System;\r\nusing UnityEngine;\r\nusing System.Collections.Generic;\r\n\r\npublic class ConsoleGUIWindow : MonoBehaviour\r\n{\r\n    [SerializeField]\r\n    private WorkingType workingType = WorkingType.ALWAYS_OPEN;\r\n    private Rect expandRect;\r\n    private Rect retractRect;\r\n    private Rect dragableRect;\r\n    private bool isExpand;\r\n    private int fps;\r\n    private float lastShowFPSTime;\r\n    private Color fpsColor = Color.white;\r\n    //日志列表\r\n    private readonly List<ConsoleItem> logs = new List<ConsoleItem>();\r\n\r\n    //列表滚动视图\r\n    private Vector2 listScroll;\r\n    //详情滚动视图\r\n    private Vector2 detailScroll;\r\n    //普通日志数量\r\n    private int infoCount;\r\n    //告警日志数量\r\n    private int warnCount;\r\n    //错误日志数量\r\n    private int errorCount;\r\n    //是否显示普通日志\r\n    [SerializeField] private bool showInfo = true;\r\n    //是否显示告警日志\r\n    [SerializeField] private bool showWarn = true;\r\n    //是否显示错误日志\r\n    [SerializeField] private bool showError = true;\r\n    //当前选中的日志项\r\n    private ConsoleItem currentSelected;\r\n    //是否显示日志时间\r\n    [SerializeField] private bool showTime = true;\r\n    //最大缓存数量\r\n    [SerializeField] private int maxCacheCount = 100;\r\n    //检索内容\r\n    private string searchContent;\r\n\r\n    private void Start()\r\n    {\r\n        switch (workingType)\r\n        {\r\n            case WorkingType.ALWAYS_OPEN: \r\n                enabled = true; \r\n                break;\r\n            case WorkingType.ONLY_OPEN_WHEN_DEVELOPMENT_BUILD:\r\n                enabled = Debug.isDebugBuild;\r\n                break;\r\n            case WorkingType.ONLY_OPEN_IN_EDITOR:\r\n                enabled = Application.isEditor; \r\n                break;\r\n            case WorkingType.ALWAYS_CLOSE: \r\n                enabled = false; \r\n                break;\r\n        }\r\n        if (!enabled) return;\r\n\r\n        expandRect = new Rect(Screen.width * .7f, 0f, \r\n            Screen.width * .3f, Screen.height * .5f);\r\n        retractRect = new Rect(Screen.width - 100f, 0f, 100f, 60f);\r\n        dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n        //事件注册\r\n        Application.logMessageReceived += OnLogMessageReceived;\r\n    }\r\n    private void OnDestroy()\r\n    {\r\n        Application.logMessageReceived -= OnLogMessageReceived;\r\n    }\r\n\r\n    private void OnLogMessageReceived(string condition,\r\n        string stackTrace, LogType logType)\r\n    {\r\n        var item = new ConsoleItem(DateTime.Now,\r\n            logType, condition, stackTrace);\r\n        if (logType == LogType.Log) infoCount++;\r\n        else if (logType == LogType.Warning) warnCount++;\r\n        else errorCount++;\r\n        logs.Add(item);\r\n        if (logs.Count > maxCacheCount)\r\n        {\r\n            logs.RemoveAt(0);\r\n        }\r\n    }\r\n\r\n    private void OnGUI()\r\n    {\r\n        if (isExpand)\r\n        {\r\n            expandRect = GUI.Window(0, expandRect, OnExpandGUI, \"Console\");\r\n            //限制范围\r\n            expandRect.x = Mathf.Clamp(expandRect.x, 0, Screen.width * .7f);\r\n            expandRect.y = Mathf.Clamp(expandRect.y, 0, Screen.height * .5f);\r\n            dragableRect = new Rect(0, 0, Screen.width * .3f, 20f);\r\n        }\r\n        else\r\n        {\r\n            retractRect = GUI.Window(0, retractRect, OnRetractGUI, \"Console\");\r\n            //限制范围\r\n            retractRect.x = Mathf.Clamp(retractRect.x, 0, Screen.width - 100f);\r\n            retractRect.y = Mathf.Clamp(retractRect.y, 0, Screen.height - 60f);\r\n            dragableRect = new Rect(0, 0, 100f, 20f);\r\n        }\r\n        //FPS计算\r\n        if (Time.realtimeSinceStartup - lastShowFPSTime >= 1)\r\n        {\r\n            fps = Mathf.RoundToInt(1f / Time.deltaTime);\r\n            lastShowFPSTime = Time.realtimeSinceStartup;\r\n            fpsColor = errorCount > 0 ? Color.red\r\n                : warnCount > 0 ? Color.yellow : Color.white;\r\n        }\r\n    }\r\n    //窗口为收起状态\r\n    private void OnRetractGUI(int windowId)\r\n    {\r\n        GUI.DragWindow(dragableRect);\r\n        GUI.contentColor = fpsColor;\r\n        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\r\n            GUILayout.Height(30f)))\r\n            isExpand = true;\r\n        GUI.contentColor = Color.white;\r\n    }\r\n    //窗口为展开状态\r\n    private void OnExpandGUI(int windowId)\r\n    {\r\n        GUI.DragWindow(dragableRect);\r\n        GUI.contentColor = fpsColor;\r\n        if (GUILayout.Button(string.Format(\"FPS：{0}\", fps),\r\n            GUILayout.Height(20f)))\r\n            isExpand = false;\r\n        OnTopGUI();\r\n        OnListGUI();\r\n        OnDetailGUI();\r\n    }\r\n    private void OnTopGUI()\r\n    {\r\n        GUILayout.BeginHorizontal();\r\n        //清空所有日志\r\n        if (GUILayout.Button(\"Clear\", GUILayout.Width(50f)))\r\n        {\r\n            logs.Clear();\r\n            infoCount = 0;\r\n            warnCount = 0;\r\n            errorCount = 0;\r\n            currentSelected = null;\r\n        }\r\n        //是否显示日志时间\r\n        showTime = GUILayout.Toggle(showTime, \"ShowTime\",\r\n            GUILayout.Width(80f));\r\n\r\n        //检索输入框\r\n        searchContent = GUILayout.TextField(searchContent,\r\n            GUILayout.ExpandWidth(true));\r\n\r\n        GUI.contentColor = showInfo ? Color.white : Color.grey;\r\n        showInfo = GUILayout.Toggle(showInfo, string.Format(\r\n            \"Info [{0}]\", infoCount), GUILayout.Width(60f));\r\n        GUI.contentColor = showWarn ? Color.white : Color.grey;\r\n        showWarn = GUILayout.Toggle(showWarn, string.Format(\r\n            \"Warn [{0}]\", warnCount), GUILayout.Width(65f));\r\n        GUI.contentColor = showError ? Color.white : Color.grey;\r\n        showError = GUILayout.Toggle(showError, string.Format(\r\n            \"Error [{0}]\", errorCount), GUILayout.Width(65f));\r\n        GUI.contentColor = Color.white;\r\n        GUILayout.EndHorizontal();\r\n    }\r\n    private void OnListGUI()\r\n    {\r\n        GUILayout.BeginVertical(\"Box\",\r\n            GUILayout.Height(Screen.height * .3f));\r\n        //滚动视图\r\n        listScroll = GUILayout.BeginScrollView(listScroll);\r\n        for (int i = logs.Count - 1; i >= 0; i--)\r\n        {\r\n            var temp = logs[i];\r\n            //是否符合检索内容\r\n            if (!string.IsNullOrEmpty(searchContent) && !temp.message\r\n                .ToLower().Contains(searchContent.ToLower())) continue;\r\n            bool show = false;\r\n            switch (temp.type)\r\n            {\r\n                case LogType.Log: \r\n                    if (showInfo) show = true;\r\n                    break;\r\n                case LogType.Warning:\r\n                    if (showWarn) show = true; \r\n                    GUI.contentColor = Color.yellow;\r\n                    break;\r\n                case LogType.Error:\r\n                case LogType.Assert:\r\n                case LogType.Exception: \r\n                    if (showError) show = true; \r\n                    GUI.contentColor = Color.red; \r\n                    break;\r\n            }\r\n            if (show)\r\n            {\r\n                if (GUILayout.Toggle(currentSelected == temp, \r\n                    showTime ? temp.brief : temp.message))\r\n                    currentSelected = temp;\r\n            }\r\n            GUI.contentColor = Color.white;\r\n        }\r\n        GUILayout.EndScrollView();\r\n        GUILayout.EndVertical();\r\n    }\r\n    private void OnDetailGUI()\r\n    {\r\n        GUILayout.BeginVertical(\"Box\", GUILayout.ExpandHeight(true));\r\n        detailScroll = GUILayout.BeginScrollView(detailScroll);\r\n        if (currentSelected != null)\r\n        {\r\n            GUILayout.Label(currentSelected.detail);\r\n        }\r\n        GUILayout.EndScrollView();\r\n        GUILayout.FlexibleSpace();\r\n        GUI.enabled = currentSelected != null;\r\n        //点击按钮时将日志详情复制到系统粘贴板中\r\n        if (GUILayout.Button(\"Copy\", GUILayout.Height(20f)))\r\n        {\r\n            GUIUtility.systemCopyBuffer = currentSelected.detail;\r\n        }\r\n        GUILayout.EndVertical();\r\n    }\r\n}\r\n\r\npublic enum WorkingType\r\n{\r\n    /// <summary>\r\n    /// 始终打开\r\n    /// </summary>\r\n    ALWAYS_OPEN,\r\n    /// <summary>\r\n    /// 仅在Development Build模式下打开\r\n    /// </summary>\r\n    ONLY_OPEN_WHEN_DEVELOPMENT_BUILD,\r\n    /// <summary>\r\n    /// 仅在Editor中打开\r\n    /// </summary>\r\n    ONLY_OPEN_IN_EDITOR,\r\n    /// <summary>\r\n    /// 始终关闭\r\n    /// </summary>\r\n    ALWAYS_CLOSE\r\n}\r\n\r\npublic class ConsoleItem\r\n{\r\n    public LogType type;\r\n    public DateTime time;\r\n    public string message;\r\n    public string stackTrace;\r\n    public string brief;\r\n    public string detail;\r\n\r\n    public ConsoleItem(DateTime time, LogType type,\r\n        string message, string stackTrace)\r\n    {\r\n        this.type = type;\r\n        this.time = time;\r\n        this.message = message;\r\n        this.stackTrace = stackTrace;\r\n        brief = string.Format(\"[{0}] {1}\",\r\n            time, message);\r\n        detail = string.Format(\"[{0}] {1}\\r\\n{2}\",\r\n            time, message, stackTrace);\r\n    }\r\n}"
        }
    ]
}