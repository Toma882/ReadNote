{
    "sourceFile": "Assets/UnityEditor/Chapter 8 UnityAPI/UnityEngine/Experimental/ExperimentalExample.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1750932301550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750932321264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n /// </summary>\r\n public class ExperimentalExample : MonoBehaviour\r\n {\r\n     [Header(\"实验性API设置\")]\r\n-    [SerializeField] private bool useExperimentalRendering = true;\r\n-    [SerializeField] private bool useExperimentalInput = false;\r\n-    [SerializeField] private bool useExperimentalXR = false;\r\n+    [SerializeField] private bool useExperimentalRendering = true; //是否使用实验性渲染\r\n+    [SerializeField] private bool useExperimentalInput = false; //是否使用实验性输入\r\n+    [SerializeField] private bool useExperimentalXR = false; //是否使用实验性XR\r\n \r\n     private void Start()\r\n     {\r\n #if UNITY_2021_1_OR_NEWER\r\n"
                }
            ],
            "date": 1750932301550,
            "name": "Commit-0",
            "content": "using UnityEngine;\r\n#if UNITY_2021_1_OR_NEWER\r\nusing UnityEngine.Experimental.Rendering;\r\n#endif\r\n\r\n/// <summary>\r\n/// UnityEngine.Experimental 命名空间案例演示\r\n/// 展示实验性API的典型用法\r\n/// </summary>\r\npublic class ExperimentalExample : MonoBehaviour\r\n{\r\n    [Header(\"实验性API设置\")]\r\n    [SerializeField] private bool useExperimentalRendering = true;\r\n    [SerializeField] private bool useExperimentalInput = false;\r\n    [SerializeField] private bool useExperimentalXR = false;\r\n\r\n    private void Start()\r\n    {\r\n#if UNITY_2021_1_OR_NEWER\r\n        if (useExperimentalRendering)\r\n        {\r\n            Debug.Log($\"当前GraphicsFormat: {SystemInfo.GetGraphicsFormat(UnityEngine.Experimental.Rendering.DefaultFormat.LDR)}\");\r\n        }\r\n#endif\r\n        if (useExperimentalInput)\r\n        {\r\n            Debug.Log(\"实验性Input API演示（需引入相关包）\");\r\n        }\r\n        if (useExperimentalXR)\r\n        {\r\n            Debug.Log(\"实验性XR API演示（需引入相关包）\");\r\n        }\r\n    }\r\n\r\n    private void OnGUI()\r\n    {\r\n        GUILayout.BeginArea(new Rect(10, 10, 350, 180));\r\n        GUILayout.Label(\"Experimental 实验性API演示\", UnityEditor.EditorStyles.boldLabel);\r\n        useExperimentalRendering = GUILayout.Toggle(useExperimentalRendering, \"实验性Rendering\");\r\n        useExperimentalInput = GUILayout.Toggle(useExperimentalInput, \"实验性Input\");\r\n        useExperimentalXR = GUILayout.Toggle(useExperimentalXR, \"实验性XR\");\r\n        if (GUILayout.Button(\"执行实验性API演示\"))\r\n        {\r\n            Start();\r\n        }\r\n        GUILayout.EndArea();\r\n    }\r\n} "
        }
    ]
}